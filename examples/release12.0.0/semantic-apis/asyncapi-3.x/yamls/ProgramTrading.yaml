asyncapi: 3.0.0
info:
  title: Program Trading
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    supports a program trading capability where the trading decisions are made
    based on predefined/programmed rules and policies. Manual oversight and
    monitoring capabilities are supported as appropriate
channels:
  ProgramTradingOperatingSession/Created:
    address: ProgramTradingOperatingSession/Created
    messages:
      ProgramTradingOperatingSession-created.message:
        $ref: '#/components/messages/ProgramTradingOperatingSession'
    description: ''
  ProgramTradingOperatingSession/Updated:
    address: ProgramTradingOperatingSession/Updated
    messages:
      ProgramTradingOperatingSession-updated.message:
        $ref: '#/components/messages/ProgramTradingOperatingSession'
    description: ''
  ProgramTradedPortfolioMaintenance/Created:
    address: ProgramTradedPortfolioMaintenance/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradedPortfolioMaintenance'
    description: ''
  ProgramTradedPortfolioMaintenance/Updated:
    address: ProgramTradedPortfolioMaintenance/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradedPortfolioMaintenance'
    description: ''
  ProgramTradedPortfolioAlgorithm/Created:
    address: ProgramTradedPortfolioAlgorithm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradedPortfolioAlgorithm'
    description: ''
  ProgramTradedPortfolioAlgorithm/Updated:
    address: ProgramTradedPortfolioAlgorithm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradedPortfolioAlgorithm'
    description: ''
  ProgramTradeExecution/Created:
    address: ProgramTradeExecution/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradeExecution'
    description: ''
  ProgramTradeExecution/Updated:
    address: ProgramTradeExecution/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradeExecution'
    description: ''
  ProgramTradingOutcome/Created:
    address: ProgramTradingOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradingOutcome'
    description: ''
  ProgramTradingOutcome/Updated:
    address: ProgramTradingOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProgramTradingOutcome'
    description: ''
  ProgramTradingOperatingSession/Notify:
    address: ProgramTradingOperatingSession/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ProgramTradingOperatingSessionNotify'
  ProgramTradeExecution/Notify:
    address: ProgramTradeExecution/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ProgramTradeExecutionNotify'
  ProgramTradedPortfolioAlgorithm/Notify:
    address: ProgramTradedPortfolioAlgorithm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ProgramTradedPortfolioAlgorithmNotify'
  ProgramTradedPortfolioMaintenance/Notify:
    address: ProgramTradedPortfolioMaintenance/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ProgramTradedPortfolioMaintenanceNotify'
operations:
  ProgramTradingOperatingSession-created:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradingOperatingSession~1Created'
    summary: ProgramTradingOperatingSession
    messages:
      - $ref: >-
          #/channels/ProgramTradingOperatingSession~1Created/messages/ProgramTradingOperatingSession-created.message
  ProgramTradingOperatingSession-updated:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradingOperatingSession~1Updated'
    summary: ProgramTradingOperatingSession
    messages:
      - $ref: >-
          #/channels/ProgramTradingOperatingSession~1Updated/messages/ProgramTradingOperatingSession-updated.message
  ProgramTradedPortfolioMaintenance/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradedPortfolioMaintenance~1Created'
    summary: ProgramTradedPortfolioMaintenance
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioMaintenance~1Created/messages/publish.message
  ProgramTradedPortfolioMaintenance/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradedPortfolioMaintenance~1Updated'
    summary: ProgramTradedPortfolioMaintenance
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioMaintenance~1Updated/messages/publish.message
  ProgramTradedPortfolioAlgorithm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradedPortfolioAlgorithm~1Created'
    summary: ProgramTradedPortfolioAlgorithm
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioAlgorithm~1Created/messages/publish.message
  ProgramTradedPortfolioAlgorithm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradedPortfolioAlgorithm~1Updated'
    summary: ProgramTradedPortfolioAlgorithm
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioAlgorithm~1Updated/messages/publish.message
  ProgramTradeExecution/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradeExecution~1Created'
    summary: ProgramTradeExecution
    messages:
      - $ref: '#/channels/ProgramTradeExecution~1Created/messages/publish.message'
  ProgramTradeExecution/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradeExecution~1Updated'
    summary: ProgramTradeExecution
    messages:
      - $ref: '#/channels/ProgramTradeExecution~1Updated/messages/publish.message'
  ProgramTradingOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradingOutcome~1Created'
    summary: ProgramTradingOutcome
    messages:
      - $ref: '#/channels/ProgramTradingOutcome~1Created/messages/publish.message'
  ProgramTradingOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProgramTradingOutcome~1Updated'
    summary: ProgramTradingOutcome
    messages:
      - $ref: '#/channels/ProgramTradingOutcome~1Updated/messages/publish.message'
  ProgramTradingOperatingSession/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ProgramTradingOperatingSession~1Notify'
    messages:
      - $ref: >-
          #/channels/ProgramTradingOperatingSession~1Notify/messages/subscribe.message
  ProgramTradeExecution/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ProgramTradeExecution~1Notify'
    messages:
      - $ref: '#/channels/ProgramTradeExecution~1Notify/messages/subscribe.message'
  ProgramTradedPortfolioAlgorithm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ProgramTradedPortfolioAlgorithm~1Notify'
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioAlgorithm~1Notify/messages/subscribe.message
  ProgramTradedPortfolioMaintenance/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ProgramTradedPortfolioMaintenance~1Notify'
    messages:
      - $ref: >-
          #/channels/ProgramTradedPortfolioMaintenance~1Notify/messages/subscribe.message
components:
  messages:
    ProgramTradingOperatingSession:
      name: ProgramTradingOperatingSession
      description: >-
        Operate equipment and/or a largely automated facility within Program
        Trading. 
      payload:
        $ref: '#/components/schemas/ProgramTradingOperatingSession'
    ProgramTradedPortfolioMaintenance:
      name: ProgramTradedPortfolioMaintenance
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      payload:
        $ref: '#/components/schemas/ProgramTradedPortfolioMaintenance'
    ProgramTradedPortfolioAlgorithm:
      name: ProgramTradedPortfolioAlgorithm
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      payload:
        $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithm'
    ProgramTradeExecution:
      name: ProgramTradeExecution
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      payload:
        $ref: '#/components/schemas/ProgramTradeExecution'
    ProgramTradingOutcome:
      name: ProgramTradingOutcome
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      payload:
        $ref: '#/components/schemas/ProgramTradingOutcome'
    ProgramTradingOperatingSessionNotify:
      name: ProgramTradingOperatingSessionNotify
      payload:
        $ref: '#/components/schemas/ProgramTradingOperatingSessionNotify'
    ProgramTradeExecutionNotify:
      name: ProgramTradeExecutionNotify
      payload:
        $ref: '#/components/schemas/ProgramTradeExecutionNotify'
    ProgramTradedPortfolioAlgorithmNotify:
      name: ProgramTradedPortfolioAlgorithmNotify
      payload:
        $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmNotify'
    ProgramTradedPortfolioMaintenanceNotify:
      name: ProgramTradedPortfolioMaintenanceNotify
      payload:
        $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceNotify'
  schemas:
    ProgramTradedPortfolioMaintenance:
      type: object
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradedPortfolioMaintenanceFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradedPortfolioMaintenanceFunctionType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The required status/situation and or tasks that need to be completed prior to the invocation of the feature \r\n"
      properties:
        Condition:
          type: string
          format: Class
          description: >-
            Condition is a premise upon which the fulfillment of an agreement
            depends 


            General and special arrangements, provisions, requirements, rules,
            specifications, and standards that form an integral part of an
            agreement or contract.


            Read more:
            http://www.businessdictionary.com/definition/terms-and-conditions.html

             
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    BusinessService:
      type: object
      format: BusinessService
      description: "The Program Traded Portfolio Maintenance Function specific Business Service \r\n"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Session:
      type: object
      format: Session
      description: "Reference to Program Traded Portfolio Maintenance Function \r\n"
      properties:
        SessionDuration:
          $ref: '#/components/schemas/Duration'
        SessionDateTime:
          $ref: '#/components/schemas/Datetime'
        SessionStatus:
          $ref: '#/components/schemas/Status'
        SessionType:
          $ref: '#/components/schemas/Sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/Schedule'
    Duration:
      type: object
      format: Duration
      description: 'The time the session was active '
      properties:
        Duration:
          type: string
          format: DataType
          description: >-
            A duration is the specification of a length of time without a fixed
            start or end time, expressed in Gregorian calendar time units (Year,
            Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Text:
      type: object
      format: Text
      description: "The type of Program Traded Portfolio Maintenance Function \r\n"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Sessiontype:
      type: object
      format: Sessiontype
      description: >-
        Specifies the classification of session like Customer Contact Session,
        Channel Operating Session, Device Operating Session, etc. 
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/Name'
        Sessiontypevalues:
          enum:
            - ContactHandlingSession
            - CustomerDialogueSession
            - ChannelOperatingSession
            - GatewayOperatingSession
            - SwitchOperatingSession
            - DeviceOperatingSession
            - ACHOperatingSession
          format: Sessiontype
    Function:
      type: object
      format: Function
      description: "Reference to Program Traded Portfolio Maintenance Function \r\n"
      properties:
        Function:
          type: string
          format: Class
          description: >-
            A kind of action.


            Functions as Behaviour Qualifier: The collection of operational
            services/functions offered by the operational facility. 
    ProgramTradedPortfolioAlgorithm:
      type: object
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradedPortfolioAlgorithmFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradedPortfolioAlgorithmFunctionType:
          $ref: '#/components/schemas/Text'
    ProgramTradeExecution:
      type: object
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradeExecutionFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradeExecutionFunctionType:
          $ref: '#/components/schemas/Text'
    ProgramTradingOutcome:
      type: object
      description: >-
        An operational service or function supported within the Program Traded
        Portfolio Maintenance Function for doing Program Traded Portfolio
        Maintenance Function
      properties:
        ProgramTradingIncident:
          $ref: '#/components/schemas/Event'
        ProgramTradingProvision:
          $ref: '#/components/schemas/Text'
    Event:
      type: object
      format: Event
      description: " \r\n"
      properties:
        EventType:
          type: string
          format: String
          description: ''
        EventDateTime:
          type: string
          format: String
          description: ''
        EventDescription:
          type: string
          format: String
          description: ''
        EventSource:
          type: string
          format: String
          description: ''
        EventLocation:
          type: string
          format: String
          description: ''
        EventAction:
          type: string
          format: String
          description: ''
        EventStatus:
          type: string
          format: String
          description: ''
        EventValue:
          type: string
          format: String
          description: ''
        EventValidityPeriod:
          type: string
          format: String
          description: ''
        EventIdentification:
          type: string
          format: String
          description: ''
    ProgramTradingOperatingSession:
      type: object
      description: >-
        Operate equipment and/or a largely automated facility within Program
        Trading. 
      properties:
        ProgramTradingOperatingSessionSchedule:
          $ref: '#/components/schemas/Schedule'
        ProgramTradingOperatingSessionStatus:
          $ref: '#/components/schemas/Status'
        ProgramTradingOperatingSessionUsageLog:
          $ref: '#/components/schemas/Log'
        ProgramTradingOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        ProgramTradingOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        ProgramTradingOperatingSessionType:
          $ref: '#/components/schemas/Sessiontype'
        ProgramTradingOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        ProgramTradingOperatingSessionServiceType:
          $ref: '#/components/schemas/Servicetype'
        ProgramTradingOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/SystemConfigurationOption'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
    Log:
      type: object
      format: Log
      description: "Reference to the log of (usage) ativities/events  of Program Trading Operating Session \r\n"
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    Servicetype:
      type: object
      format: Servicetype
      description: "A Classification value that distinguishes between the type of services within Program Trading Operating Session \r\n"
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/Name'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Servicetype
    SystemConfigurationOption:
      type: object
      format: SystemConfigurationOption
      description: "The configuration of Program Trading Operating Session \r\n"
      properties:
        SystemConfigurationOption:
          type: string
          format: Class
          description: >-
            Options for configuring the system or the function/feature of
            system.
             
    ProgramTradingOperatingSessionNotify:
      type: object
      description: ''
      properties:
        ProgramTradingOperatingSessionSchedule:
          $ref: '#/components/schemas/Schedule'
        ProgramTradingOperatingSessionStatus:
          $ref: '#/components/schemas/Status'
        ProgramTradingOperatingSessionUsageLog:
          $ref: '#/components/schemas/Log'
        ProgramTradingOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        ProgramTradingOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        ProgramTradingOperatingSessionType:
          $ref: '#/components/schemas/Sessiontype'
        ProgramTradingOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        ProgramTradingOperatingSessionServiceType:
          $ref: '#/components/schemas/Servicetype'
        ProgramTradingOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/SystemConfigurationOption'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
    ProgramTradeExecutionNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradeExecutionFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradeExecutionFunctionType:
          $ref: '#/components/schemas/Text'
    ProgramTradedPortfolioAlgorithmNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradedPortfolioAlgorithmFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradedPortfolioAlgorithmFunctionType:
          $ref: '#/components/schemas/Text'
    ProgramTradedPortfolioMaintenanceNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/Session'
        ProgramTradedPortfolioMaintenanceFunctionReference:
          $ref: '#/components/schemas/Function'
        ProgramTradedPortfolioMaintenanceFunctionType:
          $ref: '#/components/schemas/Text'
