asyncapi: 3.0.0
info:
  title: Customer Offer
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the processing of a product offer for a new or established 
    customer. The offer process is defined specifically for the product or
    service being considered and can include actions such as document checks,
    collateral allocation, credit assessments, underwriting decisions,
    regulatory and procedural checks, eligibility checks, the use of internal
    and external specialist services (such as evaluations and legal advice).
channels:
  CustomerOfferProcedure/Created:
    address: CustomerOfferProcedure/Created
    messages:
      CustomerOfferProcedure-created.message:
        $ref: '#/components/messages/CustomerOfferProcedure'
    description: ''
  CustomerOfferProcedure/Updated:
    address: CustomerOfferProcedure/Updated
    messages:
      CustomerOfferProcedure-updated.message:
        $ref: '#/components/messages/CustomerOfferProcedure'
    description: ''
  Booking/Created:
    address: Booking/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Booking'
    description: ''
  Booking/Updated:
    address: Booking/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Booking'
    description: ''
  Underwriting/Created:
    address: Underwriting/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Underwriting'
    description: ''
  Underwriting/Updated:
    address: Underwriting/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Underwriting'
    description: ''
  Audit/Created:
    address: Audit/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Audit'
    description: ''
  Audit/Updated:
    address: Audit/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Audit'
    description: ''
  Collateral/Created:
    address: Collateral/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Collateral'
    description: ''
  Collateral/Updated:
    address: Collateral/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Collateral'
    description: ''
  Credit/Created:
    address: Credit/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Credit'
    description: ''
  Credit/Updated:
    address: Credit/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Credit'
    description: ''
  Agreement/Created:
    address: Agreement/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Agreement'
    description: ''
  Agreement/Updated:
    address: Agreement/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Agreement'
    description: ''
  Compliance/Created:
    address: Compliance/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Compliance'
    description: ''
  Compliance/Updated:
    address: Compliance/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Compliance'
    description: ''
  ProductInitialization/Created:
    address: ProductInitialization/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductInitialization'
    description: ''
  ProductInitialization/Updated:
    address: ProductInitialization/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductInitialization'
    description: ''
  Disclosures/Created:
    address: Disclosures/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Disclosures'
    description: ''
  Disclosures/Updated:
    address: Disclosures/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Disclosures'
    description: ''
  FacilityApplication/Created:
    address: FacilityApplication/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FacilityApplication'
    description: ''
  FacilityApplication/Updated:
    address: FacilityApplication/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FacilityApplication'
    description: ''
  CorrespondenceandDocuments/Created:
    address: CorrespondenceandDocuments/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondenceandDocuments'
    description: ''
  CorrespondenceandDocuments/Updated:
    address: CorrespondenceandDocuments/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondenceandDocuments'
    description: ''
operations:
  CustomerOfferProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerOfferProcedure~1Created'
    summary: CustomerOfferProcedure
    messages:
      - $ref: >-
          #/channels/CustomerOfferProcedure~1Created/messages/CustomerOfferProcedure-created.message
  CustomerOfferProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerOfferProcedure~1Updated'
    summary: CustomerOfferProcedure
    messages:
      - $ref: >-
          #/channels/CustomerOfferProcedure~1Updated/messages/CustomerOfferProcedure-updated.message
  Booking/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Booking~1Created'
    summary: Booking
    messages:
      - $ref: '#/channels/Booking~1Created/messages/publish.message'
  Booking/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Booking~1Updated'
    summary: Booking
    messages:
      - $ref: '#/channels/Booking~1Updated/messages/publish.message'
  Underwriting/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Underwriting~1Created'
    summary: Underwriting
    messages:
      - $ref: '#/channels/Underwriting~1Created/messages/publish.message'
  Underwriting/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Underwriting~1Updated'
    summary: Underwriting
    messages:
      - $ref: '#/channels/Underwriting~1Updated/messages/publish.message'
  Audit/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Audit~1Created'
    summary: Audit
    messages:
      - $ref: '#/channels/Audit~1Created/messages/publish.message'
  Audit/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Audit~1Updated'
    summary: Audit
    messages:
      - $ref: '#/channels/Audit~1Updated/messages/publish.message'
  Collateral/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Collateral~1Created'
    summary: Collateral
    messages:
      - $ref: '#/channels/Collateral~1Created/messages/publish.message'
  Collateral/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Collateral~1Updated'
    summary: Collateral
    messages:
      - $ref: '#/channels/Collateral~1Updated/messages/publish.message'
  Credit/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Credit~1Created'
    summary: Credit
    messages:
      - $ref: '#/channels/Credit~1Created/messages/publish.message'
  Credit/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Credit~1Updated'
    summary: Credit
    messages:
      - $ref: '#/channels/Credit~1Updated/messages/publish.message'
  Agreement/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Agreement~1Created'
    summary: Agreement
    messages:
      - $ref: '#/channels/Agreement~1Created/messages/publish.message'
  Agreement/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Agreement~1Updated'
    summary: Agreement
    messages:
      - $ref: '#/channels/Agreement~1Updated/messages/publish.message'
  Compliance/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Compliance~1Created'
    summary: Compliance
    messages:
      - $ref: '#/channels/Compliance~1Created/messages/publish.message'
  Compliance/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Compliance~1Updated'
    summary: Compliance
    messages:
      - $ref: '#/channels/Compliance~1Updated/messages/publish.message'
  ProductInitialization/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductInitialization~1Created'
    summary: ProductInitialization
    messages:
      - $ref: '#/channels/ProductInitialization~1Created/messages/publish.message'
  ProductInitialization/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductInitialization~1Updated'
    summary: ProductInitialization
    messages:
      - $ref: '#/channels/ProductInitialization~1Updated/messages/publish.message'
  Disclosures/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Disclosures~1Created'
    summary: Disclosures
    messages:
      - $ref: '#/channels/Disclosures~1Created/messages/publish.message'
  Disclosures/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Disclosures~1Updated'
    summary: Disclosures
    messages:
      - $ref: '#/channels/Disclosures~1Updated/messages/publish.message'
  FacilityApplication/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FacilityApplication~1Created'
    summary: FacilityApplication
    messages:
      - $ref: '#/channels/FacilityApplication~1Created/messages/publish.message'
  FacilityApplication/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FacilityApplication~1Updated'
    summary: FacilityApplication
    messages:
      - $ref: '#/channels/FacilityApplication~1Updated/messages/publish.message'
  CorrespondenceandDocuments/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondenceandDocuments~1Created'
    summary: CorrespondenceandDocuments
    messages:
      - $ref: >-
          #/channels/CorrespondenceandDocuments~1Created/messages/publish.message
  CorrespondenceandDocuments/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondenceandDocuments~1Updated'
    summary: CorrespondenceandDocuments
    messages:
      - $ref: >-
          #/channels/CorrespondenceandDocuments~1Updated/messages/publish.message
components:
  messages:
    CustomerOfferProcedure:
      name: CustomerOfferProcedure
      description: >-
        The customer offer procedure record, combines the result of all
        underlying work steps
      payload:
        $ref: '#/components/schemas/CustomerOfferProcedure'
    Booking:
      name: Booking
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Booking'
    Underwriting:
      name: Underwriting
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Underwriting'
    Audit:
      name: Audit
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Audit'
    Collateral:
      name: Collateral
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Collateral'
    Credit:
      name: Credit
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Credit'
    Agreement:
      name: Agreement
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Agreement'
    Compliance:
      name: Compliance
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Compliance'
    ProductInitialization:
      name: ProductInitialization
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/ProductInitialization'
    Disclosures:
      name: Disclosures
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/Disclosures'
    FacilityApplication:
      name: FacilityApplication
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/FacilityApplication'
    CorrespondenceandDocuments:
      name: CorrespondenceandDocuments
      description: Handles the booking of the asset or liability to the appropriate unit
      payload:
        $ref: '#/components/schemas/CorrespondenceandDocuments'
  schemas:
    Booking:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        BusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        Financialinstrumenttypevalues:
          enum:
            - Loan
            - Bond
            - Deposit
            - Stock
            - Option
            - Share
            - Debt
            - Letterofcredit
            - Security
            - Derivative
        Amount:
          $ref: '#/components/schemas/Amount'
    BusinessUnit:
      type: object
      format: BusinessUnit
      description: "Defines the booking entity \r\n"
      properties:
        BusinessFunction:
          type: string
          format: String
          description: ''
        Goal:
          type: string
          format: String
          description: ''
    Amount:
      type: object
      format: Amount
      description: >-
        The principle amount for booking CurrencyAndAmountCurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)StandardISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Underwriting:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        CustomerIncomeStatement:
          $ref: '#/components/schemas/Statement'
        CustomerDebtStatement:
          $ref: '#/components/schemas/Statement'
        CustomerAssetStatement:
          $ref: '#/components/schemas/Statement'
        UnderwritingAssessmentReference:
          $ref: '#/components/schemas/UnderwritingAssessment'
    Statement:
      type: object
      format: Statement
      description: "The provided asset statement may combine bank and known non-bank managed assets \r\n"
      properties:
        Financialstatementtypevalues:
          enum:
            - IncomeStatement
            - BalanceSheet
            - CashFlowsStatement
            - DebtStatement
            - AssetStatement
            - AssetAndLiabilityStatement
          format: Statement
    UnderwritingAssessment:
      type: object
      format: UnderwritingAssessment
      description: "The outcome of the underwriting assessment \r\n"
      properties:
        UnderwritingAssessmentIdentifier:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Audit:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        Compliancechecktypevalues:
          enum:
            - RegulatoryComplianceCheck
            - LegalComplianceCheck
            - GuidelineComplianceCheck
        GuidelineComplianceCheckRequirement:
          $ref: '#/components/schemas/Requirement'
        GuidelineComplianceCheckSubmission:
          $ref: '#/components/schemas/Text'
        GuidelineComplianceAdjustmentRequirement:
          $ref: '#/components/schemas/Requirement'
        GuidelineComplianceCheckAssessment:
          $ref: '#/components/schemas/ComplianceCheck'
    Requirement:
      type: object
      format: Requirement
      description: "Any required changes to the offer needed to comply \r\n"
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    ComplianceCheck:
      type: object
      format: ComplianceCheck
      description: "The result of the compliance assessment \r\n"
      properties:
        ComplianceCheckType:
          type: string
          format: String
          description: ''
    Collateral:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        CollateralRequirement:
          $ref: '#/components/schemas/CollateralAssetArrangement'
        CollateralEarmarkReference:
          $ref: '#/components/schemas/PaymentWarrantyArrangement'
        CollateralAssetReference:
          $ref: '#/components/schemas/CollateralAsset'
        CollateralAssetAllocationReference:
          $ref: '#/components/schemas/CollateralAssetAllocation'
    CollateralAssetArrangement:
      type: object
      format: CollateralAssetArrangement
      description: >-
        The required collateral amount for the offer CollateralCollateral
        (https://www.iso20022.org/standardsrepository/type/Collateral)StandardISO20022
        BM ()
      properties:
        CollateralPledgedDate:
          $ref: '#/components/schemas/Date'
        Collateraltypevalues:
          enum:
            - Letterofcredit
            - Cash
            - Securities
            - Physicalentities
            - Insurance
            - Stockcertificate
            - Bond
            - Bankguarantee
            - Other
            - Commodity
            - Automobile
            - Industrialvehicle
            - Commercialtruck
            - Railvehicle
            - Nauticalcommercialvehicle
            - Nauticalleisurevehicle
            - Aeroplane
            - Machinetool
            - Industrialequipment
            - Officeequipment
            - Itequipment
            - Medicalequipment
            - Energyrelatedequipment
            - Commercialbuilding
          format: CollateralAssetArrangement
        CollateralValuePledged:
          $ref: '#/components/schemas/Amount'
        CollateralAmount:
          $ref: '#/components/schemas/Amount'
    Date:
      type: object
      format: Date
      description: 'Date when the asset was provided as collateral '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    PaymentWarrantyArrangement:
      type: object
      format: PaymentWarrantyArrangement
      description: "Reference to earmarked collateral during the offer procedure \r\n"
      properties:
        CollateralAgreementReference:
          $ref: '#/components/schemas/Collateralagreement'
        WarrantyAmount:
          $ref: '#/components/schemas/Amount'
        WarrantyDuration:
          $ref: '#/components/schemas/Duration'
        RecallPlan:
          $ref: '#/components/schemas/Schedule'
    Collateralagreement:
      type: object
      format: Collateralagreement
      description: ' '
      properties:
        CollateralAgreementIdentifier:
          type: string
          format: String
          description: >-
            An identifier that allows to uniquely refer to an instance of a
            Collateral Agreement.
             
        CollateralAgreementRegistrationReference:
          type: string
          format: String
          description: >-
            External identifier assigned by a collateral registration authority
            to refer to the registration of the collateral agreement. 
    Duration:
      type: object
      format: Duration
      description: 'duration for which the earmarking is enforced '
      properties:
        Duration:
          type: string
          format: DataType
          description: >-
            A duration is the specification of a length of time without a fixed
            start or end time, expressed in Gregorian calendar time units (Year,
            Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT) 
    Schedule:
      type: object
      format: Schedule
      description: 'A time table to recall the allocated amounts. '
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    CollateralAsset:
      type: object
      format: CollateralAsset
      description: >-
        Reference to the related collateral asset (e.g. property) AssetAsset
        (https://www.iso20022.org/standardsrepository/type/Asset)StandardISO20022
        BM ()
      properties:
        CollateralAssetIdentification:
          $ref: '#/components/schemas/Identifier'
        Collateraltypevalues:
          enum:
            - Letterofcredit
            - Cash
            - Securities
            - Physicalentities
            - Insurance
            - Stockcertificate
            - Bond
            - Bankguarantee
            - Other
            - Commodity
            - Automobile
            - Industrialvehicle
            - Commercialtruck
            - Railvehicle
            - Nauticalcommercialvehicle
            - Nauticalleisurevehicle
            - Aeroplane
            - Machinetool
            - Industrialequipment
            - Officeequipment
            - Itequipment
            - Medicalequipment
            - Energyrelatedequipment
            - Commercialbuilding
          format: CollateralAsset
        CollateralAssetValuation:
          $ref: '#/components/schemas/Assetvaluation'
        Collateralassetstatusvalues:
          enum:
            - Offered
            - UnderAssessment
            - Transferred
            - Allocated
            - FreeForAllocation
            - AllocatedToAnotherLoan
            - IssuedForExecution
          format: CollateralAsset
    Assetvaluation:
      type: object
      format: Assetvaluation
      description: ' '
      properties:
        AssetValue:
          $ref: '#/components/schemas/Value'
        AssetValueType:
          $ref: '#/components/schemas/Text'
        AssetValuationType:
          $ref: '#/components/schemas/Text'
        AssetValuationDate:
          $ref: '#/components/schemas/Datetime'
        AssetValuationServiceReference:
          $ref: '#/components/schemas/Service'
        AssetValuationRate:
          $ref: '#/components/schemas/Rate'
        AssetValuationStatus:
          $ref: '#/components/schemas/Status'
        AssetValuationValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    Service:
      type: object
      format: Service
      description: >-
        External identifier assigned by an asset valuation service provider to
        refer to an instance of Asset Valuation  
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        FeatureType:
          $ref: '#/components/schemas/Text'
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Rate:
      type: object
      format: Rate
      description: ' '
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    CollateralAssetAllocation:
      type: object
      format: CollateralAssetAllocation
      description: "Reference to the allocated collateral \r\n"
      properties:
        Allocationstatusvalues:
          enum:
            - Fullyallocated
            - Partiallyallocated
            - Earmarked
          format: CollateralAssetAllocation
    Credit:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        CustomerCreditRating:
          $ref: '#/components/schemas/CustomerRating'
        CreditAuthorizationDecisionReference:
          $ref: '#/components/schemas/CustomerCreditRatingAssessment'
        CreditAuthorizationDecision:
          $ref: '#/components/schemas/Text'
    CustomerRating:
      type: object
      format: CustomerRating
      description: "The customer's current credit rating \r\n"
      properties:
        Customerratingtypevalues:
          enum:
            - Customerprofitability
            - Customercreditrating
          format: CustomerRating
        CustomerRatingValue:
          $ref: '#/components/schemas/Value'
        CustomerRatingDescription:
          $ref: '#/components/schemas/Text'
        CustomerRatingValueDate:
          $ref: '#/components/schemas/Datetime'
        CustomerRatingValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    CustomerCreditRatingAssessment:
      type: object
      format: CustomerCreditRatingAssessment
      description: "Reference to the authorization if an aspect of the offer procedure \r\n"
      properties:
        CreditRatingAssessmentType:
          type: string
          format: ''
          description: ''
    Agreement:
      type: object
      format: Agreement
      description: ' '
      properties:
        CustomerAgreementInstanceReference:
          $ref: '#/components/schemas/CustomerAgreement'
        SalesProductAgreementInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    CustomerAgreement:
      type: object
      format: CustomerAgreement
      description: "Reference to the associated master agreement that is accessed during the offer procedure \r\n"
      properties:
        CustomerAgreement:
          type: string
          format: Class
          description: 'An agreement between a bank and its customer.  '
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to the product specific agreement that is set-up as a result of the offer procedure (when successful) \r\n"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
          format: ProductAgreement
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/Agreement'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Agreementlifecyclestatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    Compliance:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        Compliancechecktypevalues:
          enum:
            - RegulatoryComplianceCheck
            - LegalComplianceCheck
            - GuidelineComplianceCheck
        RegulatoryComplianceCheckRequirement:
          $ref: '#/components/schemas/Requirement'
        RegulatoryComplianceCheckSubmission:
          $ref: '#/components/schemas/Text'
        RegulatoryComplianceAdjustmentRequirement:
          $ref: '#/components/schemas/Requirement'
        RegulatoryComplianceCheckAssessment:
          $ref: '#/components/schemas/RegulatoryComplianceCheck'
    RegulatoryComplianceCheck:
      type: object
      format: RegulatoryComplianceCheck
      description: "The result of the compliance assessment \r\n"
      properties:
        RegulatoryComplianceCheckResult:
          type: string
          format: String
          description: ''
    ProductInitialization:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
    Disclosures:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        DisclosureType:
          $ref: '#/components/schemas/Disclosure'
        DisclosureTextDescription:
          $ref: '#/components/schemas/Text'
        CustomerAcceptanceIndicator:
          type: string
          format: Boolean
          description: "An indicator that the disclosure has been accepted (indicates signature obtained as necessary) \r\n"
        DocumentReference:
          $ref: '#/components/schemas/Document'
    Disclosure:
      type: object
      format: Disclosure
      description: "The type of disclosure (e.g. verbal, requiring signature) \r\n"
      properties:
        DisclosureType:
          $ref: '#/components/schemas/Text'
        ConfirmationIndicator:
          $ref: '#/components/schemas/Text'
        SpecifiedDocument:
          $ref: '#/components/schemas/Document'
    Document:
      type: object
      format: Document
      description: "The customer signature/acceptance record Document\__x000D_\nDocument (https://www.iso20022.org/standardsrepository/type/Document)StandardISO20022 BM ()"
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    FacilityApplication:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        FacilityOption:
          $ref: '#/components/schemas/Feature'
        FacilityOptionDescription:
          $ref: '#/components/schemas/Text'
        FacilityOptionSetting:
          $ref: '#/components/schemas/Arrangement'
        FacilityPricing:
          $ref: '#/components/schemas/FeeArrangement'
        NegotiationGuidelinesRules:
          $ref: '#/components/schemas/RuleSet'
        AgreedPricing:
          $ref: '#/components/schemas/FeeArrangement'
        PricingAdjustments:
          $ref: '#/components/schemas/FeeArrangement'
        FacilitySchedule:
          $ref: '#/components/schemas/Schedule'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The option setting as agreed/defined with the customer
        ObligationObligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)StandardISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementlifecyclestatus:
      type: object
      format: Arrangementlifecyclestatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Arrangementlifecyclestatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementlifecyclestatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    FeeArrangement:
      type: object
      format: FeeArrangement
      description: ' AdjustmentAdjustment (https://www.iso20022.org/standardsrepository/type/Adjustment)StandardISO20022 BM ()'
      properties:
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
          format: FeeArrangement
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/Datetime'
        FeePlan:
          $ref: '#/components/schemas/Feeplan'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: FeeArrangement
        FeeReason:
          $ref: '#/components/schemas/Text'
        Adjustmentdirectiontypevalues:
          enum:
            - Added
            - Substracted
          format: FeeArrangement
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
          format: FeeArrangement
    Feeplan:
      type: object
      format: Feeplan
      description: An arranged FeeRatePlan
      properties:
        FeePlanName:
          $ref: '#/components/schemas/Name'
        Feeplantypevalues:
          enum:
            - StandardFeePlan
            - FinalFeePlan
          format: Feeplan
        FeePlan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      format: Plan
      description: ' '
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        PlanType:
          $ref: '#/components/schemas/Plantype'
        PlanOrganisation:
          type: string
          format: String
          description: ''
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        GoalType:
          type: string
          format: String
          description: 'The type of goal '
        GoalDefinition:
          type: string
          format: String
          description: >-
            A definition of the goal, including the intended actions required to
            achieve the goal 
        GoalOrganisation:
          type: string
          format: ''
          description: >-
            Identifies the interested parties and their roles and
            responsibilities for the specific actions supporting the achievement
            of the goal 
        GoalResult:
          type: string
          format: String
          description: >-
            Assessment of how the work is progressing towards achieving the
            goal, including projections of likely outcomes 
        Goal:
          type: string
          format: Class
          description: >-
            A goal represents a high-level statement of intent, direction, or
            desired end state for an organization and its stakeholders.
            (ArchiMate 3.1)


            An observable and measurable end result having one or more
            objectives to be achieved within a more or less fixed timeframe.


            Read more: http://www.businessdictionary.com/definition/goal.html 
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
        BudgetArrangement:
          type: string
          format: Class
          description: >-
            An arrangement which is specifying an estimate of costs, revenues,
            and resources over a specified period, reflecting a reading of
            future financial conditions and goals. (adapted from Business
            Dictionary)


            Read more: http://www.businessdictionary.com/definition/budget.html



            A budget is an estimation of revenue and expenses over a specified
            future period of time and is utilized by governments, businesses,
            and individuals.

            A budget is basically a financial plan for a defined period,
            normally a year that is known to greatly enhance the success of any
            financial undertaking. (Investopedia)


            https://www.investopedia.com/terms/b/budget.asp 
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Plantype:
      type: object
      format: Plantype
      description: 'A Classification value that specifies the type of Plan '
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/Name'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
          format: Plantype
        Plantype:
          type: string
          format: DataType
          description: 'Data type specifies the classification of a Plan  '
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Guidelines for the allowed situation-based pricing adjustments (to
        maximize margins) GovernanceRulesGovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)StandardISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        RuleSetType:
          $ref: '#/components/schemas/Rulesettype'
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Rulesettype:
      type: object
      format: Rulesettype
      description: ' '
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/Name'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: Rulesettype
    CorrespondenceandDocuments:
      type: object
      description: Handles the booking of the asset or liability to the appropriate unit
      properties:
        CustomerOfferRequiredDocuments:
          type: string
          format: String
          description: "Description of the required documents and time limits on receipt where appropriate \r\n"
        CorrespondenceInstanceReference:
          type: string
          format: Object
          description: "Reference to the correspondence generated and received \r\n"
        CorrespondenceContent:
          type: string
          format: String
          description: "Correspondence content messages sent to and received from involved parties \r\n"
        DocumentDirectoryEntryInstanceReference:
          type: string
          format: Object
          description: "The document reference for associated documents \r\n"
        DocumentContent:
          type: string
          format: String
          description: "Document copy/content legal or significant documents created & referenced \r\n"
    CustomerOfferProcedure:
      type: object
      description: >-
        The customer offer procedure record, combines the result of all
        underlying work steps
      properties:
        CustomerReference:
          $ref: '#/components/schemas/CustomerRelationship'
        PartyReference:
          $ref: '#/components/schemas/Party'
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
        CustomerOfferProcessingSchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerOfferProcessingTask:
          $ref: '#/components/schemas/Workstep'
        Worksteptypevalues:
          enum:
            - Worksteptypevalues
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerOfferProcessingTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        CustomerOfferProcessingTaskResult:
          $ref: '#/components/schemas/Text'
        CustomerOfferInvolvedParty:
          $ref: '#/components/schemas/CustomerOfferInvolvement'
        CustomerOfferReference:
          $ref: '#/components/schemas/CustomerOffer'
    CustomerRelationship:
      type: object
      format: CustomerRelationship
      description: "Reference to the associated customer (can currently be a person or a company) \r\n"
      properties:
        CustomerRelationship:
          type: string
          format: Class
          description: >-
            A specific relationship between a specific Bank ( -  party acting as
            a supplier of banking services) and one or more other involved
            parties acting as (potential) consumers of banking services as
            agreed in one or more banking product or service offerings and/or
            agreements. 
    Workstep:
      type: object
      format: Workstep
      description: "Tasks performed to maintain/verify the life-cycle status \r\n"
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/Text'
        Worksteptypevalues:
          enum:
            - Worksteptypevalues
          format: Workstep
        WorkstepDescription:
          $ref: '#/components/schemas/Text'
        WorkstepDateTime:
          $ref: '#/components/schemas/Datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/Status'
    Workproduct:
      type: object
      format: Workproduct
      description: "Work documentation, forms and schedules produced and referenced during the analysis \r\n"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          type: string
          format: String
          description: ''
    CustomerOfferInvolvement:
      type: object
      format: CustomerOfferInvolvement
      description: "When doing customer offer, multiple parties can be involved. This can be in the context of customer ( 1 or more parties who are known as the customer ) but it can also be someone who is giving a personal warranty.\nSometimes the involved parties are not customers but for example beneficiaries. \r\n"
      properties:
        Customerofferinvolvementtypevalues:
          enum:
            - Customer
            - ServiceProvider
            - SalesTeam
            - MarketingTeam
            - LegalAndComplianceTeam
            - AnalyticsAndReporting
          format: CustomerOfferInvolvement
        PartyReference:
          $ref: '#/components/schemas/Party'
        CustomerOfferReference:
          type: string
          format: Customeroffer
          description: ''
    CustomerOffer:
      type: object
      format: CustomerOffer
      description: " \r\n"
      properties:
        OfferIdentification:
          $ref: '#/components/schemas/Identifier'
        Offertypevalues:
          enum:
            - BalanceTransfer
            - LimitIncrease
            - MoneyTransfer
            - PromotionalRate
            - Other
          format: CustomerOffer
        OfferDescription:
          $ref: '#/components/schemas/Text'
        OfferStartDate:
          $ref: '#/components/schemas/Datetime'
        OfferEndDate:
          $ref: '#/components/schemas/Datetime'
        OfferRate:
          $ref: '#/components/schemas/Rate'
        OfferValue:
          $ref: '#/components/schemas/Value'
        OfferTermAndCondition:
          $ref: '#/components/schemas/Condition'
        OfferAmount:
          $ref: '#/components/schemas/Amount'
    Condition:
      type: object
      format: Condition
      description: 'Further details of the term of the offer. '
      properties:
        Condition:
          type: string
          format: Class
          description: >-
            Condition is a premise upon which the fulfillment of an agreement
            depends 


            General and special arrangements, provisions, requirements, rules,
            specifications, and standards that form an integral part of an
            agreement or contract.


            Read more:
            http://www.businessdictionary.com/definition/terms-and-conditions.html

             
