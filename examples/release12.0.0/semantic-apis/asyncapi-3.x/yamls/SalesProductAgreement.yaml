asyncapi: 3.0.0
info:
  title: Sales Product Agreement
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    maintains a structured legal agreement defining the contractual terms and
    conditions for an in-force product for a customer. It is subordinate to the
    customer's master agreement that is maintained by the Customer Agreement
    service domain
channels:
  SalesProductAgreement/Created:
    address: SalesProductAgreement/Created
    messages:
      SalesProductAgreement-created.message:
        $ref: '#/components/messages/SalesProductAgreement'
    description: ''
  SalesProductAgreement/Updated:
    address: SalesProductAgreement/Updated
    messages:
      SalesProductAgreement-updated.message:
        $ref: '#/components/messages/SalesProductAgreement'
    description: ''
  PolicyTerms/Created:
    address: PolicyTerms/Created
    messages:
      publish.message:
        $ref: '#/components/messages/PolicyTerms'
    description: ''
  PolicyTerms/Updated:
    address: PolicyTerms/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/PolicyTerms'
    description: ''
  LegalTerms/Created:
    address: LegalTerms/Created
    messages:
      publish.message:
        $ref: '#/components/messages/LegalTerms'
    description: ''
  LegalTerms/Updated:
    address: LegalTerms/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/LegalTerms'
    description: ''
  RegulatoryTerms/Created:
    address: RegulatoryTerms/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RegulatoryTerms'
    description: ''
  RegulatoryTerms/Updated:
    address: RegulatoryTerms/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RegulatoryTerms'
    description: ''
operations:
  SalesProductAgreement-created:
    action: receive
    channel:
      $ref: '#/channels/SalesProductAgreement~1Created'
    summary: SalesProductAgreement
    messages:
      - $ref: >-
          #/channels/SalesProductAgreement~1Created/messages/SalesProductAgreement-created.message
  SalesProductAgreement-updated:
    action: receive
    channel:
      $ref: '#/channels/SalesProductAgreement~1Updated'
    summary: SalesProductAgreement
    messages:
      - $ref: >-
          #/channels/SalesProductAgreement~1Updated/messages/SalesProductAgreement-updated.message
  PolicyTerms/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/PolicyTerms~1Created'
    summary: PolicyTerms
    messages:
      - $ref: '#/channels/PolicyTerms~1Created/messages/publish.message'
  PolicyTerms/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/PolicyTerms~1Updated'
    summary: PolicyTerms
    messages:
      - $ref: '#/channels/PolicyTerms~1Updated/messages/publish.message'
  LegalTerms/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/LegalTerms~1Created'
    summary: LegalTerms
    messages:
      - $ref: '#/channels/LegalTerms~1Created/messages/publish.message'
  LegalTerms/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/LegalTerms~1Updated'
    summary: LegalTerms
    messages:
      - $ref: '#/channels/LegalTerms~1Updated/messages/publish.message'
  RegulatoryTerms/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RegulatoryTerms~1Created'
    summary: RegulatoryTerms
    messages:
      - $ref: '#/channels/RegulatoryTerms~1Created/messages/publish.message'
  RegulatoryTerms/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RegulatoryTerms~1Updated'
    summary: RegulatoryTerms
    messages:
      - $ref: '#/channels/RegulatoryTerms~1Updated/messages/publish.message'
components:
  messages:
    SalesProductAgreement:
      name: SalesProductAgreement
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Sales Product Agreement.


      payload:
        $ref: '#/components/schemas/SalesProductAgreement'
    PolicyTerms:
      name: PolicyTerms
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      payload:
        $ref: '#/components/schemas/PolicyTerms'
    LegalTerms:
      name: LegalTerms
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      payload:
        $ref: '#/components/schemas/LegalTerms'
    RegulatoryTerms:
      name: RegulatoryTerms
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      payload:
        $ref: '#/components/schemas/RegulatoryTerms'
  schemas:
    PolicyTerms:
      type: object
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      properties:
        BankPolicy-RuleType:
          $ref: '#/components/schemas/Text'
        ApplicableBankPolicy-RuleReference:
          $ref: '#/components/schemas/Policy'
        ApplicableBankPolicy-RuleInterpretation:
          $ref: '#/components/schemas/Text'
    Text:
      type: object
      format: Text
      description: "Explanation or interpretation of the policy or rule as applied \r\n"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Policy:
      type: object
      format: Policy
      description: "Reference to the bank's policies or rules \r\n"
      properties:
        PolicyType:
          type: string
          format: String
          description: 'Classification of a policy according to the subject '
    LegalTerms:
      type: object
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      properties:
        Jurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        ApplicableLawReference:
          $ref: '#/components/schemas/Law'
        ApplicableLawInterpretation:
          $ref: '#/components/schemas/Text'
    Jurisdiction:
      type: object
      format: Jurisdiction
      description: >-
        The legal jurisdiction JurisdictionJurisdiction
        (https://www.iso20022.org/standardsrepository/type/Jurisdiction)StandardISO20022
        BM ()
      properties:
        Jurisdiction:
          type: string
          format: Class
          description: 'Jurisdiction that will be assigned in case of legal dispute. '
    Law:
      type: object
      format: Law
      description: "Reference to any legal requirements \r\n"
      properties:
        LawType:
          type: string
          format: String
          description: ''
        LawDescription:
          type: string
          format: String
          description: ''
        LegalPenalty:
          type: string
          format: String
          description: 'the possible implications of breaking the law '
        LegalGuideline:
          type: string
          format: String
          description: 'A guidelines and requirement for following the law '
    RegulatoryTerms:
      type: object
      description: >-
        A collection of terms (within some jurisdiction) that can be selected
        and configured to define a contract /agreement


        Examples:- Required disclosures
      properties:
        RegulatoryAuthority:
          $ref: '#/components/schemas/RegulatoryAuthority'
        ApplicableRegulationReference:
          $ref: '#/components/schemas/Regulation'
        ApplicableRegulationInterpretation:
          $ref: '#/components/schemas/Text'
    RegulatoryAuthority:
      type: object
      format: RegulatoryAuthority
      description: "The applicable regulatory authority \r\n"
      properties:
        RegulatoryAuthority:
          type: string
          format: Class
          description: 'An organisation that is alowed to impose regulations '
    Regulation:
      type: object
      format: Regulation
      description: "Reference to any regulatory requirements \r\n"
      properties:
        RegulationDefinition:
          type: string
          format: String
          description: ''
    SalesProductAgreement:
      type: object
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Sales Product Agreement.


      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        LegalEntityReference:
          $ref: '#/components/schemas/Involvedparty'
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
        AgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        AgreementValidFromToDate:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementSignatoriesResponsibleParties:
          $ref: '#/components/schemas/ProductAgreementInvolvement'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        CustomerAgreementReference:
          $ref: '#/components/schemas/CustomerAgreement'
        PartyLife-cycleManagementReference:
          $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: >-
        The name of the phase of the relationship, such as prospect, contracted,
        on-board, etc. 
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        A characteristic of agreement which refers to 1) LifecycleDate of
        agreement (e.g., SignedDate, TerminatedDate, FulfilledDate) OR 2)
        ArrangedDate of agreement (e.g., StartingDate, EndingDate,
        ValidityPeriod, EffectiveDate). 
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: >-
        The identifier of agreement like Agreement Number, Contract Number,
        Contract Registration Number, etc.  
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: >-
        The period of time during which the phase was the current phase of the
        party relationship. 
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to the specific product instance covered by the sales product agreement \r\n"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
          format: ProductAgreement
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/Agreement'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Agreement:
      type: object
      format: Agreement
      description: ' '
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Agreementlifecyclestatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    ProductAgreementInvolvement:
      type: object
      format: ProductAgreementInvolvement
      description: "Reference to signatories \r\n"
      properties:
        InvolvementType:
          type: string
          format: 4B6dbb39-4C1a-Ee11-8B2e-A402b9460f22
          description: '69e31683-4d3c-ee11-8440-06fceca49739 '
        PartyReference:
          type: string
          format: 4B6dbb39-4C1a-Ee11-8B2e-A402b9460f22
          description: '6f53fd37-8257-e911-8237-0645314e65ac '
        AgreementReference:
          type: string
          format: 4B6dbb39-4C1a-Ee11-8B2e-A402b9460f22
          description: 'a05fc8be-24fd-ec11-83ad-0635e6952d6f '
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to any associated documents \r\n"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    CustomerAgreement:
      type: object
      format: CustomerAgreement
      description: "Reference to the customer master agreement that governs the product agreement \r\n"
      properties:
        CustomerAgreement:
          type: string
          format: Class
          description: 'An agreement between a bank and its customer.  '
    PartyRelationshipLifecyclePhase:
      type: object
      format: PartyRelationshipLifecyclePhase
      description: "Reference to KYC/Regulatory assessments maintained elsewhere for the customer \r\n"
      properties:
        Description:
          $ref: '#/components/schemas/Text'
        IsCurrentPhase:
          $ref: '#/components/schemas/Text'
        PhaseName:
          $ref: '#/components/schemas/Name'
        PhaseStatus:
          $ref: '#/components/schemas/Status'
        PhasePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
