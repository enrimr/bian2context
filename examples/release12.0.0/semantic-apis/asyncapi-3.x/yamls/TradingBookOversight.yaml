asyncapi: 3.0.0
info:
  title: Trading Book Oversight
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    oversees the bank's trading book (a type of account ledger that records
    details of frequently traded securities held by the bank) to manage the
    banks market risk
channels:
  TradingPositionManagementPlan/Created:
    address: TradingPositionManagementPlan/Created
    messages:
      TradingPositionManagementPlan-created.message:
        $ref: '#/components/messages/TradingPositionManagementPlan'
    description: ''
  TradingPositionManagementPlan/Updated:
    address: TradingPositionManagementPlan/Updated
    messages:
      TradingPositionManagementPlan-updated.message:
        $ref: '#/components/messages/TradingPositionManagementPlan'
    description: ''
  TradingBookAnalysisandReporting/Created:
    address: TradingBookAnalysisandReporting/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookAnalysisandReporting'
    description: ''
  TradingBookAnalysisandReporting/Updated:
    address: TradingBookAnalysisandReporting/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookAnalysisandReporting'
    description: ''
  TradingBookRiskMitigation/Created:
    address: TradingBookRiskMitigation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookRiskMitigation'
    description: ''
  TradingBookRiskMitigation/Updated:
    address: TradingBookRiskMitigation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookRiskMitigation'
    description: ''
  TradingBookOversightOutcome/Created:
    address: TradingBookOversightOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookOversightOutcome'
    description: ''
  TradingBookOversightOutcome/Updated:
    address: TradingBookOversightOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TradingBookOversightOutcome'
    description: ''
  TradingPositionManagementPlan/Notify:
    address: TradingPositionManagementPlan/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/TradingPositionManagementPlanNotify'
  TradingBookAnalysisandReporting/Notify:
    address: TradingBookAnalysisandReporting/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/TradingBookAnalysisandReportingNotify'
  TradingBookRiskMitigation/Notify:
    address: TradingBookRiskMitigation/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/TradingBookRiskMitigationNotify'
operations:
  TradingPositionManagementPlan-created:
    action: receive
    channel:
      $ref: '#/channels/TradingPositionManagementPlan~1Created'
    summary: TradingPositionManagementPlan
    messages:
      - $ref: >-
          #/channels/TradingPositionManagementPlan~1Created/messages/TradingPositionManagementPlan-created.message
  TradingPositionManagementPlan-updated:
    action: receive
    channel:
      $ref: '#/channels/TradingPositionManagementPlan~1Updated'
    summary: TradingPositionManagementPlan
    messages:
      - $ref: >-
          #/channels/TradingPositionManagementPlan~1Updated/messages/TradingPositionManagementPlan-updated.message
  TradingBookAnalysisandReporting/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookAnalysisandReporting~1Created'
    summary: TradingBookAnalysisandReporting
    messages:
      - $ref: >-
          #/channels/TradingBookAnalysisandReporting~1Created/messages/publish.message
  TradingBookAnalysisandReporting/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookAnalysisandReporting~1Updated'
    summary: TradingBookAnalysisandReporting
    messages:
      - $ref: >-
          #/channels/TradingBookAnalysisandReporting~1Updated/messages/publish.message
  TradingBookRiskMitigation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookRiskMitigation~1Created'
    summary: TradingBookRiskMitigation
    messages:
      - $ref: '#/channels/TradingBookRiskMitigation~1Created/messages/publish.message'
  TradingBookRiskMitigation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookRiskMitigation~1Updated'
    summary: TradingBookRiskMitigation
    messages:
      - $ref: '#/channels/TradingBookRiskMitigation~1Updated/messages/publish.message'
  TradingBookOversightOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookOversightOutcome~1Created'
    summary: TradingBookOversightOutcome
    messages:
      - $ref: >-
          #/channels/TradingBookOversightOutcome~1Created/messages/publish.message
  TradingBookOversightOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TradingBookOversightOutcome~1Updated'
    summary: TradingBookOversightOutcome
    messages:
      - $ref: >-
          #/channels/TradingBookOversightOutcome~1Updated/messages/publish.message
  TradingPositionManagementPlan/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/TradingPositionManagementPlan~1Notify'
    messages:
      - $ref: >-
          #/channels/TradingPositionManagementPlan~1Notify/messages/subscribe.message
  TradingBookAnalysisandReporting/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/TradingBookAnalysisandReporting~1Notify'
    messages:
      - $ref: >-
          #/channels/TradingBookAnalysisandReporting~1Notify/messages/subscribe.message
  TradingBookRiskMitigation/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/TradingBookRiskMitigation~1Notify'
    messages:
      - $ref: >-
          #/channels/TradingBookRiskMitigation~1Notify/messages/subscribe.message
components:
  messages:
    TradingPositionManagementPlan:
      name: TradingPositionManagementPlan
      description: >-
        Oversee the working of a business unit, assign work, manage against a
        plan and troubleshoot issues within Trading Book Oversight.
      payload:
        $ref: '#/components/schemas/TradingPositionManagementPlan'
    TradingBookAnalysisandReporting:
      name: TradingBookAnalysisandReporting
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      payload:
        $ref: '#/components/schemas/TradingBookAnalysisandReporting'
    TradingBookRiskMitigation:
      name: TradingBookRiskMitigation
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      payload:
        $ref: '#/components/schemas/TradingBookRiskMitigation'
    TradingBookOversightOutcome:
      name: TradingBookOversightOutcome
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      payload:
        $ref: '#/components/schemas/TradingBookOversightOutcome'
    TradingPositionManagementPlanNotify:
      name: TradingPositionManagementPlanNotify
      payload:
        $ref: '#/components/schemas/TradingPositionManagementPlanNotify'
    TradingBookAnalysisandReportingNotify:
      name: TradingBookAnalysisandReportingNotify
      payload:
        $ref: '#/components/schemas/TradingBookAnalysisandReportingNotify'
    TradingBookRiskMitigationNotify:
      name: TradingBookRiskMitigationNotify
      payload:
        $ref: '#/components/schemas/TradingBookRiskMitigationNotify'
  schemas:
    TradingBookAnalysisandReporting:
      type: object
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingBookAnalysisandReportingDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        TradingBookAnalysisandReportingDutyType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently) \r\n"
      properties:
        Condition:
          type: string
          format: Class
          description: >-
            Condition is a premise upon which the fulfillment of an agreement
            depends 


            General and special arrangements, provisions, requirements, rules,
            specifications, and standards that form an integral part of an
            agreement or contract.


            Read more:
            http://www.businessdictionary.com/definition/terms-and-conditions.html

             
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the range ends. (ISO20022) '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Text:
      type: object
      format: Text
      description: "The type of Trading Book Analysis and Reporting Duty \r\n"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in fulfilling the duty \r\n"
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    BusinessService:
      type: object
      format: BusinessService
      description: "The Trading Book Analysis and Reporting Duty specific Business Service \r\n"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Plan:
      type: object
      format: Plan
      description: "Reference to Trading Book Analysis and Reporting Duty \r\n"
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        PlanType:
          $ref: '#/components/schemas/Plantype'
        PlanOrganisation:
          type: string
          format: String
          description: ''
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        GoalType:
          type: string
          format: String
          description: 'The type of goal '
        GoalDefinition:
          type: string
          format: String
          description: >-
            A definition of the goal, including the intended actions required to
            achieve the goal 
        GoalOrganisation:
          type: string
          format: ''
          description: >-
            Identifies the interested parties and their roles and
            responsibilities for the specific actions supporting the achievement
            of the goal 
        GoalResult:
          type: string
          format: String
          description: >-
            Assessment of how the work is progressing towards achieving the
            goal, including projections of likely outcomes 
        Goal:
          type: string
          format: Class
          description: >-
            A goal represents a high-level statement of intent, direction, or
            desired end state for an organization and its stakeholders.
            (ArchiMate 3.1)


            An observable and measurable end result having one or more
            objectives to be achieved within a more or less fixed timeframe.


            Read more: http://www.businessdictionary.com/definition/goal.html 
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
        BudgetArrangement:
          type: string
          format: Class
          description: >-
            An arrangement which is specifying an estimate of costs, revenues,
            and resources over a specified period, reflecting a reading of
            future financial conditions and goals. (adapted from Business
            Dictionary)


            Read more: http://www.businessdictionary.com/definition/budget.html



            A budget is an estimation of revenue and expenses over a specified
            future period of time and is utilized by governments, businesses,
            and individuals.

            A budget is basically a financial plan for a defined period,
            normally a year that is known to greatly enhance the success of any
            financial undertaking. (Investopedia)


            https://www.investopedia.com/terms/b/budget.asp 
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Plantype:
      type: object
      format: Plantype
      description: 'A Classification value that specifies the type of Plan '
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/Name'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
          format: Plantype
        Plantype:
          type: string
          format: DataType
          description: 'Data type specifies the classification of a Plan  '
    PlannedAction:
      type: object
      format: PlannedAction
      description: "Reference to Trading Book Analysis and Reporting Duty \r\n"
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    TradingBookRiskMitigation:
      type: object
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingBookRiskMitigationDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        TradingBookRiskMitigationDutyType:
          $ref: '#/components/schemas/Text'
    TradingBookOversightOutcome:
      type: object
      description: >-
        The Trading Book Analysis and Reporting Duty is a specific role or
        responsibility that is one aspect of Trading Book Analysis and Reporting
        Duty
      properties:
        TradingBookOversightPerformanceAnalysis:
          $ref: '#/components/schemas/Analysis'
        TradingBookOversightActivityAnalysis:
          $ref: '#/components/schemas/Analysis'
        TradingBookOversightCharter:
          $ref: '#/components/schemas/Plan'
        TradingBookOversightTask:
          $ref: '#/components/schemas/Task'
        TradingBookOversightProject:
          $ref: '#/components/schemas/Project'
    Analysis:
      type: object
      format: Analysis
      description: " \r\n"
      properties:
        Analysistypevalues:
          enum:
            - PerformanceAnalysis
            - ActivityAnalysis
          format: Analysis
        AnalysisResult:
          $ref: '#/components/schemas/Text'
        AnalysisPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/Document'
        AnalysisDateTime:
          $ref: '#/components/schemas/Datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/Text'
    Document:
      type: object
      format: Document
      description: ' '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    Status:
      type: object
      format: Status
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022 '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Task:
      type: object
      format: Task
      description: " \r\n"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Project:
      type: object
      format: Project
      description: " \r\n"
      properties:
        ProjectName:
          type: string
          format: String
          description: 'The name of project '
        ProjectType:
          type: string
          format: String
          description: 'A classification of the project '
        ProjectDescription:
          type: string
          format: String
          description: 'A description of the scope, goal and make-up of the project '
        ProjectOrganisation:
          type: string
          format: String
          description: ''
        ProjectSchedule:
          type: string
          format: String
          description: ''
        ProjectDateTime:
          type: string
          format: String
          description: ''
    TradingPositionManagementPlan:
      type: object
      description: >-
        Oversee the working of a business unit, assign work, manage against a
        plan and troubleshoot issues within Trading Book Oversight.
      properties:
        TradingPositionManagementPlanType:
          $ref: '#/components/schemas/Plantype'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingPositionManagementPlanBudgetType:
          $ref: '#/components/schemas/Budgettype'
        TradingPositionManagementPlanBudget:
          $ref: '#/components/schemas/Amount'
        TradingPositionManagementPlanAssignment:
          $ref: '#/components/schemas/Assignment'
        TradingPositionManagementPlanDuty:
          $ref: '#/components/schemas/Arrangement'
        TradingPositionManagementPlanDescription:
          $ref: '#/components/schemas/Text'
        TradingPositionManagementPlanBudgetBalance:
          $ref: '#/components/schemas/Accountbalance'
        TradingPositionManagementPlanAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        TradingPositionManagementPlanSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of Trading Position Management Plan \r\n"
    Assignment:
      type: object
      format: Assignment
      description: "The assignment of a required activity to a responsibe party in Trading Position Management Plan \r\n"
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        SubjectMatter:
          type: string
          format: Object
          description: ''
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The set of management responsibilities defined in Trading Position
        Management Plan ObligationObligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)StandardISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementlifecyclestatus:
      type: object
      format: Arrangementlifecyclestatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Arrangementlifecyclestatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementlifecyclestatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        Balance of budget which is arranged whitin Trading Position Management
        Plan BalanceBalance
        (https://www.iso20022.org/standardsrepository/type/Balance)StandardISO20022
        BM ()
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - Openingbalance
            - Closingbalance
            - Currentbalance
            - Availablebalance
            - Ledgerbalance
            - Reservebalance
            - Freebalance
            - Principalbalance
          format: Accountbalance
        BalanceDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
    TradingPositionManagementPlanNotify:
      type: object
      description: ''
      properties:
        TradingPositionManagementPlanType:
          $ref: '#/components/schemas/Plantype'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingPositionManagementPlanBudgetType:
          $ref: '#/components/schemas/Budgettype'
        TradingPositionManagementPlanAssignment:
          $ref: '#/components/schemas/Assignment'
        TradingPositionManagementPlanDuty:
          $ref: '#/components/schemas/Arrangement'
        TradingPositionManagementPlanDescription:
          $ref: '#/components/schemas/Text'
        TradingPositionManagementPlanBudgetBalance:
          $ref: '#/components/schemas/Accountbalance'
        TradingPositionManagementPlanAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        TradingPositionManagementPlanSubjectMatter:
          type: string
          format: Object
          description: The subject matter of Trading Position Management Plan
    TradingBookAnalysisandReportingNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingBookAnalysisandReportingDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        TradingBookAnalysisandReportingDutyType:
          $ref: '#/components/schemas/Text'
    TradingBookRiskMitigationNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        TradingPositionManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        TradingBookRiskMitigationDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        TradingBookRiskMitigationDutyType:
          $ref: '#/components/schemas/Text'
