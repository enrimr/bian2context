asyncapi: 3.0.0
info:
  title: Issued Device Administration
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    administers the issuance of authentication tokens to customers and third
    party service providers. Tokens here include physical devices such as cards,
    fobs, readers and intangible 'devices' such as passwords and secret
    questions. Administration includes version tracking, replacement and
    duration/frequency limits. Specific product/service access permissions may
    be associated with an issued token when appropriate
channels:
  IssuedDeviceAllocation/Created:
    address: IssuedDeviceAllocation/Created
    messages:
      IssuedDeviceAllocation-created.message:
        $ref: '#/components/messages/IssuedDeviceAllocation'
    description: ''
  IssuedDeviceAllocation/Updated:
    address: IssuedDeviceAllocation/Updated
    messages:
      IssuedDeviceAllocation-updated.message:
        $ref: '#/components/messages/IssuedDeviceAllocation'
    description: ''
  TokenAssignment/Created:
    address: TokenAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TokenAssignment'
    description: ''
  TokenAssignment/Updated:
    address: TokenAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TokenAssignment'
    description: ''
  QuestionAssignment/Created:
    address: QuestionAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/QuestionAssignment'
    description: ''
  QuestionAssignment/Updated:
    address: QuestionAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/QuestionAssignment'
    description: ''
  PasswordAssignment/Created:
    address: PasswordAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/PasswordAssignment'
    description: ''
  PasswordAssignment/Updated:
    address: PasswordAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/PasswordAssignment'
    description: ''
  ReaderAssignment/Created:
    address: ReaderAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ReaderAssignment'
    description: ''
  ReaderAssignment/Updated:
    address: ReaderAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ReaderAssignment'
    description: ''
  ChequesAssignment/Created:
    address: ChequesAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ChequesAssignment'
    description: ''
  ChequesAssignment/Updated:
    address: ChequesAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ChequesAssignment'
    description: ''
  BiometricAssignment/Created:
    address: BiometricAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/BiometricAssignment'
    description: ''
  BiometricAssignment/Updated:
    address: BiometricAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/BiometricAssignment'
    description: ''
  DeviceAssignment/Created:
    address: DeviceAssignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/DeviceAssignment'
    description: ''
  DeviceAssignment/Updated:
    address: DeviceAssignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/DeviceAssignment'
    description: ''
operations:
  IssuedDeviceAllocation-created:
    action: receive
    channel:
      $ref: '#/channels/IssuedDeviceAllocation~1Created'
    summary: IssuedDeviceAllocation
    messages:
      - $ref: >-
          #/channels/IssuedDeviceAllocation~1Created/messages/IssuedDeviceAllocation-created.message
  IssuedDeviceAllocation-updated:
    action: receive
    channel:
      $ref: '#/channels/IssuedDeviceAllocation~1Updated'
    summary: IssuedDeviceAllocation
    messages:
      - $ref: >-
          #/channels/IssuedDeviceAllocation~1Updated/messages/IssuedDeviceAllocation-updated.message
  TokenAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TokenAssignment~1Created'
    summary: TokenAssignment
    messages:
      - $ref: '#/channels/TokenAssignment~1Created/messages/publish.message'
  TokenAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TokenAssignment~1Updated'
    summary: TokenAssignment
    messages:
      - $ref: '#/channels/TokenAssignment~1Updated/messages/publish.message'
  QuestionAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/QuestionAssignment~1Created'
    summary: QuestionAssignment
    messages:
      - $ref: '#/channels/QuestionAssignment~1Created/messages/publish.message'
  QuestionAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/QuestionAssignment~1Updated'
    summary: QuestionAssignment
    messages:
      - $ref: '#/channels/QuestionAssignment~1Updated/messages/publish.message'
  PasswordAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/PasswordAssignment~1Created'
    summary: PasswordAssignment
    messages:
      - $ref: '#/channels/PasswordAssignment~1Created/messages/publish.message'
  PasswordAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/PasswordAssignment~1Updated'
    summary: PasswordAssignment
    messages:
      - $ref: '#/channels/PasswordAssignment~1Updated/messages/publish.message'
  ReaderAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ReaderAssignment~1Created'
    summary: ReaderAssignment
    messages:
      - $ref: '#/channels/ReaderAssignment~1Created/messages/publish.message'
  ReaderAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ReaderAssignment~1Updated'
    summary: ReaderAssignment
    messages:
      - $ref: '#/channels/ReaderAssignment~1Updated/messages/publish.message'
  ChequesAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ChequesAssignment~1Created'
    summary: ChequesAssignment
    messages:
      - $ref: '#/channels/ChequesAssignment~1Created/messages/publish.message'
  ChequesAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ChequesAssignment~1Updated'
    summary: ChequesAssignment
    messages:
      - $ref: '#/channels/ChequesAssignment~1Updated/messages/publish.message'
  BiometricAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/BiometricAssignment~1Created'
    summary: BiometricAssignment
    messages:
      - $ref: '#/channels/BiometricAssignment~1Created/messages/publish.message'
  BiometricAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/BiometricAssignment~1Updated'
    summary: BiometricAssignment
    messages:
      - $ref: '#/channels/BiometricAssignment~1Updated/messages/publish.message'
  DeviceAssignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/DeviceAssignment~1Created'
    summary: DeviceAssignment
    messages:
      - $ref: '#/channels/DeviceAssignment~1Created/messages/publish.message'
  DeviceAssignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/DeviceAssignment~1Updated'
    summary: DeviceAssignment
    messages:
      - $ref: '#/channels/DeviceAssignment~1Updated/messages/publish.message'
components:
  messages:
    IssuedDeviceAllocation:
      name: IssuedDeviceAllocation
      description: >-
        Maintain an inventory or holding of some resource and make
        assignments/allocations as requested  within Issued Device
        Administration. 

        Example: Track the inventory and administer the distribution of central
        cash holdings throughout the branch & ATM network.
      payload:
        $ref: '#/components/schemas/IssuedDeviceAllocation'
    TokenAssignment:
      name: TokenAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/TokenAssignment'
    QuestionAssignment:
      name: QuestionAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/QuestionAssignment'
    PasswordAssignment:
      name: PasswordAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/PasswordAssignment'
    ReaderAssignment:
      name: ReaderAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/ReaderAssignment'
    ChequesAssignment:
      name: ChequesAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/ChequesAssignment'
    BiometricAssignment:
      name: BiometricAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/BiometricAssignment'
    DeviceAssignment:
      name: DeviceAssignment
      description: ''
      payload:
        $ref: '#/components/schemas/DeviceAssignment'
  schemas:
    TokenAssignment:
      type: object
      description: ''
      properties:
        TokenIdentificationCode:
          $ref: '#/components/schemas/Identifier'
        TokenServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        RequestorReference:
          $ref: '#/components/schemas/Involvedparty'
        RequestReference:
          $ref: '#/components/schemas/TokenRequest'
        RequestReasonDescription:
          $ref: '#/components/schemas/Text'
        PaymentAccountReference:
          $ref: '#/components/schemas/Account'
        CardReference:
          $ref: '#/components/schemas/PaymentCard'
        Tokenidentificationandverificationmethodtypevalues:
          enum:
            - AssertedAuthentication
            - InteractiveAuthentication
        Tokenstatustypevalues:
          enum:
            - Active
            - Expired
            - Cancelled
            - Generated
            - Stored
            - Mapped
            - Routed
            - Suspension
            - Updated
        TokenStatusDate:
          $ref: '#/components/schemas/Datetime'
        TokenDeviceReference:
          $ref: '#/components/schemas/Device'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: >-
        The estimated (book) value of the property at the location rental and
        purchase as appropriate. 
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Regulatory authority of the country. (ISO20022) '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'Name (label) of the location. (ISO20022) '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        Key dates associated with the directory entry (e.g. open date, refresh
        date). 
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Text:
      type: object
      format: Text
      description: 'Manufacturer of the device. '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    TokenRequest:
      type: object
      format: TokenRequest
      description: " \r\n"
      properties:
        TokenRequestIdentification:
          $ref: '#/components/schemas/Identifier'
        TokenRequestReason:
          $ref: '#/components/schemas/Text'
    Account:
      type: object
      format: Account
      description: ' AccountAccount  (https://www.iso20022.org/standardsrepository/type/Account)StandardISO20022 BM ()'
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdate'
        AccountType:
          $ref: '#/components/schemas/Accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
        Accountstatus:
          type: string
          format: DataType
          description: 'Specifies the current state of an account. (ISO20022) '
    Status:
      type: object
      format: Status
      description: >-
        The tracked status (e.g. under construction or repair, inhabited,
        vacant). 
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
        Accountidentification:
          type: string
          format: DataType
          description: ''
    Accountdate:
      type: object
      format: Accountdate
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
          format: Accountdate
        AccountDate:
          $ref: '#/components/schemas/Datetime'
        Accountdate:
          type: string
          format: DataType
          description: ''
    Accounttype:
      type: object
      format: Accounttype
      description: >-
        Specifies the category of account like payment account, loan account,
        cash account, securities account, etc.  
      properties:
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
          format: Accounttype
        AccountTypeName:
          $ref: '#/components/schemas/Name'
        Accounttype:
          type: string
          format: DataType
          description: 'A classification of accounts based on their purpose  '
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - Openingbalance
            - Closingbalance
            - Currentbalance
            - Availablebalance
            - Ledgerbalance
            - Reservebalance
            - Freebalance
            - Principalbalance
          format: Accountbalance
        BalanceDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Accountbalance:
          type: string
          format: DataType
          description: >-
            Numerical representation of the net increases and decreases in an
            account at a specific point in time. (ISO20022)

            https://www.iso20022.org/standardsrepository/type/Balance 
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
        Accountcurrency:
          type: string
          format: DataType
          description: ''
    PaymentCard:
      type: object
      format: PaymentCard
      description: ' PaymentCardPaymentCard (https://www.iso20022.org/standardsrepository/type/PaymentCard)StandardISO20022 BM ()'
      properties:
        Paymentcardtypevalues:
          enum:
            - Creditcard
            - Debitcard
          format: PaymentCard
        CardNumber:
          type: string
          format: Number
          description: >-
            Number embossed on a card that links the card to the account owner
            and account servicer (sometimes called personal account number or
            PAN). (ISO20022) 
        CardStartDate:
          $ref: '#/components/schemas/Datetime'
        CardExpiryDate:
          $ref: '#/components/schemas/Datetime'
        CardSecurityCode:
          type: string
          format: Number
          description: >-
            Security code written on the card, sometimes called card security
            code (CSC). (ISO20022) 
        CardVerificationValue:
          type: string
          format: Number
          description: ''
        BankIdentificationNumber:
          $ref: '#/components/schemas/Identifier'
    Device:
      type: object
      format: Device
      description: " \r\n"
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Device
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: >-
        The address associated with the device like Internet Protocol address,
        email Address 
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    QuestionAssignment:
      type: object
      description: ''
      properties:
        FormatRules:
          $ref: '#/components/schemas/Text'
        RecentValues:
          $ref: '#/components/schemas/Value'
        RequestText:
          $ref: '#/components/schemas/Text'
        ResponseText:
          $ref: '#/components/schemas/Text'
        UsageLog:
          $ref: '#/components/schemas/Log'
    Log:
      type: object
      format: Log
      description: "The timing and frequency of access/use includes errors for fraud detection \r\n"
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    PasswordAssignment:
      type: object
      description: ''
      properties:
        FormatRules:
          $ref: '#/components/schemas/Text'
        RecentValues:
          $ref: '#/components/schemas/Value'
        PasswordValue:
          $ref: '#/components/schemas/Value'
        UsageLog:
          $ref: '#/components/schemas/Log'
    ReaderAssignment:
      type: object
      description: ''
      properties:
        IssuedReaderDeviceSerialNumber:
          $ref: '#/components/schemas/Identifier'
        VersionNumber:
          type: string
          format: Number
          description: >-
            Operating system version for smart devices NumberNumber
            (https://www.iso20022.org/standardsrepository/type/Number)StandardISO20022
            BM ()
        IssueLocation:
          $ref: '#/components/schemas/Location'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/Feature'
        UsageLog:
          $ref: '#/components/schemas/Log'
    Feature:
      type: object
      format: Feature
      description: "The reader configuration or set-up details as appropriate \r\n"
      properties:
        FeatureType:
          $ref: '#/components/schemas/Text'
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    ChequesAssignment:
      type: object
      description: ''
      properties:
        IssuedDeviceTemplateValues:
          $ref: '#/components/schemas/Text'
        IssueLocation:
          $ref: '#/components/schemas/Location'
        SequenceNumber:
          $ref: '#/components/schemas/Identifier'
    BiometricAssignment:
      type: object
      description: ''
      properties:
        BiometricType:
          $ref: '#/components/schemas/Text'
        BiometricRegisteredDetail:
          $ref: '#/components/schemas/Text'
    DeviceAssignment:
      type: object
      description: ''
      properties:
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
        VersionNumber:
          type: string
          format: Number
          description: >-
            Operating system version for smart devices NumberNumber
            (https://www.iso20022.org/standardsrepository/type/Number)StandardISO20022
            BM ()
        Devicecustomizationtypevalues:
          enum:
            - CardDesign
        Deliverymethod:
          $ref: '#/components/schemas/Text'
        IssueLocation:
          $ref: '#/components/schemas/Text'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/Feature'
        UsageLog:
          $ref: '#/components/schemas/Log'
    IssuedDeviceAllocation:
      type: object
      description: >-
        Maintain an inventory or holding of some resource and make
        assignments/allocations as requested  within Issued Device
        Administration. 

        Example: Track the inventory and administer the distribution of central
        cash holdings throughout the branch & ATM network.
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
        AssociatedPermissions:
          $ref: '#/components/schemas/DeviceAccessArrangement'
        IssueDate:
          $ref: '#/components/schemas/Datetime'
        ValidFrom-ToDate:
          $ref: '#/components/schemas/Datetimeperiod'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Linked products and services, there can be many \r\n"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
          format: ProductAgreement
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/Agreement'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Agreement:
      type: object
      format: Agreement
      description: ' '
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Agreementlifecyclestatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    DeviceAccessArrangement:
      type: object
      format: DeviceAccessArrangement
      description: "Access/usage entitlements, can be by product instance (e.g. value, location, frequency and duration access constraints) \r\n"
      properties:
        DeviceAccessArrangement:
          type: string
          format: Class
          description: >-
            An arrangement that allows or restricts the access to a device
            through a specific access point 
