asyncapi: 3.0.0
info:
  title: Correspondent Bank Operations
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    fulfils correspondent banking arrangements between the bank and its
    correspondent banking partners.  This includes handling the clearing and
    settlement of payments to/from the correspondent banks, typically using the
    SWIFT payment network.
channels:
  CorrespondentBankOperatingSession/Created:
    address: CorrespondentBankOperatingSession/Created
    messages:
      CorrespondentBankOperatingSession-created.message:
        $ref: '#/components/messages/CorrespondentBankOperatingSession'
    description: ''
  CorrespondentBankOperatingSession/Updated:
    address: CorrespondentBankOperatingSession/Updated
    messages:
      CorrespondentBankOperatingSession-updated.message:
        $ref: '#/components/messages/CorrespondentBankOperatingSession'
    description: ''
  CorrespondentBankOperationsOutcome/Created:
    address: CorrespondentBankOperationsOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondentBankOperationsOutcome'
    description: ''
  CorrespondentBankOperationsOutcome/Updated:
    address: CorrespondentBankOperationsOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondentBankOperationsOutcome'
    description: ''
  ClearingandSettlement/Created:
    address: ClearingandSettlement/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ClearingandSettlement'
    description: ''
  ClearingandSettlement/Updated:
    address: ClearingandSettlement/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ClearingandSettlement'
    description: ''
  InboundPayments/Created:
    address: InboundPayments/Created
    messages:
      publish.message:
        $ref: '#/components/messages/InboundPayments'
    description: ''
  InboundPayments/Updated:
    address: InboundPayments/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/InboundPayments'
    description: ''
  OutboundPayments/Created:
    address: OutboundPayments/Created
    messages:
      publish.message:
        $ref: '#/components/messages/OutboundPayments'
    description: ''
  OutboundPayments/Updated:
    address: OutboundPayments/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/OutboundPayments'
    description: ''
  Reconciliation/Created:
    address: Reconciliation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
  Reconciliation/Updated:
    address: Reconciliation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
  CorrespondentBankOperatingSession/Notify:
    address: CorrespondentBankOperatingSession/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CorrespondentBankOperatingSessionNotify'
  InboundPayments/Notify:
    address: InboundPayments/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/InboundPaymentsNotify'
  OutboundPayments/Notify:
    address: OutboundPayments/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/OutboundPaymentsNotify'
  Reconciliation/Notify:
    address: Reconciliation/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ReconciliationNotify'
operations:
  CorrespondentBankOperatingSession-created:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankOperatingSession~1Created'
    summary: CorrespondentBankOperatingSession
    messages:
      - $ref: >-
          #/channels/CorrespondentBankOperatingSession~1Created/messages/CorrespondentBankOperatingSession-created.message
  CorrespondentBankOperatingSession-updated:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankOperatingSession~1Updated'
    summary: CorrespondentBankOperatingSession
    messages:
      - $ref: >-
          #/channels/CorrespondentBankOperatingSession~1Updated/messages/CorrespondentBankOperatingSession-updated.message
  CorrespondentBankOperationsOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankOperationsOutcome~1Created'
    summary: CorrespondentBankOperationsOutcome
    messages:
      - $ref: >-
          #/channels/CorrespondentBankOperationsOutcome~1Created/messages/publish.message
  CorrespondentBankOperationsOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankOperationsOutcome~1Updated'
    summary: CorrespondentBankOperationsOutcome
    messages:
      - $ref: >-
          #/channels/CorrespondentBankOperationsOutcome~1Updated/messages/publish.message
  ClearingandSettlement/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ClearingandSettlement~1Created'
    summary: ClearingandSettlement
    messages:
      - $ref: '#/channels/ClearingandSettlement~1Created/messages/publish.message'
  ClearingandSettlement/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ClearingandSettlement~1Updated'
    summary: ClearingandSettlement
    messages:
      - $ref: '#/channels/ClearingandSettlement~1Updated/messages/publish.message'
  InboundPayments/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/InboundPayments~1Created'
    summary: InboundPayments
    messages:
      - $ref: '#/channels/InboundPayments~1Created/messages/publish.message'
  InboundPayments/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/InboundPayments~1Updated'
    summary: InboundPayments
    messages:
      - $ref: '#/channels/InboundPayments~1Updated/messages/publish.message'
  OutboundPayments/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/OutboundPayments~1Created'
    summary: OutboundPayments
    messages:
      - $ref: '#/channels/OutboundPayments~1Created/messages/publish.message'
  OutboundPayments/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/OutboundPayments~1Updated'
    summary: OutboundPayments
    messages:
      - $ref: '#/channels/OutboundPayments~1Updated/messages/publish.message'
  Reconciliation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Created'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Created/messages/publish.message'
  Reconciliation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Updated'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Updated/messages/publish.message'
  CorrespondentBankOperatingSession/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CorrespondentBankOperatingSession~1Notify'
    messages:
      - $ref: >-
          #/channels/CorrespondentBankOperatingSession~1Notify/messages/subscribe.message
  InboundPayments/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/InboundPayments~1Notify'
    messages:
      - $ref: '#/channels/InboundPayments~1Notify/messages/subscribe.message'
  OutboundPayments/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/OutboundPayments~1Notify'
    messages:
      - $ref: '#/channels/OutboundPayments~1Notify/messages/subscribe.message'
  Reconciliation/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/Reconciliation~1Notify'
    messages:
      - $ref: '#/channels/Reconciliation~1Notify/messages/subscribe.message'
components:
  messages:
    CorrespondentBankOperatingSession:
      name: CorrespondentBankOperatingSession
      description: >-
        Fulfill any scheduled and ad-hoc obligations under a service
        arrangement, most typically for a financial product or facility within
        Correspondent Bank. 
      payload:
        $ref: '#/components/schemas/CorrespondentBankOperatingSession'
    CorrespondentBankOperationsOutcome:
      name: CorrespondentBankOperationsOutcome
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/CorrespondentBankOperationsOutcome'
    ClearingandSettlement:
      name: ClearingandSettlement
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/ClearingandSettlement'
    InboundPayments:
      name: InboundPayments
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/InboundPayments'
    OutboundPayments:
      name: OutboundPayments
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/OutboundPayments'
    Reconciliation:
      name: Reconciliation
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Reconciliation'
    CorrespondentBankOperatingSessionNotify:
      name: CorrespondentBankOperatingSessionNotify
      payload:
        $ref: '#/components/schemas/CorrespondentBankOperatingSessionNotify'
    InboundPaymentsNotify:
      name: InboundPaymentsNotify
      payload:
        $ref: '#/components/schemas/InboundPaymentsNotify'
    OutboundPaymentsNotify:
      name: OutboundPaymentsNotify
      payload:
        $ref: '#/components/schemas/OutboundPaymentsNotify'
    ReconciliationNotify:
      name: ReconciliationNotify
      payload:
        $ref: '#/components/schemas/ReconciliationNotify'
  schemas:
    CorrespondentBankOperationsOutcome:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      properties:
        CorrespondentBankOperationsIncident:
          $ref: '#/components/schemas/Event'
        CorrespondentBankOperationsProvision:
          $ref: '#/components/schemas/Text'
    Event:
      type: object
      format: Event
      description: " \r\n"
      properties:
        EventType:
          type: string
          format: String
          description: ''
        EventDateTime:
          type: string
          format: String
          description: ''
        EventDescription:
          type: string
          format: String
          description: ''
        EventSource:
          type: string
          format: String
          description: ''
        EventLocation:
          type: string
          format: String
          description: ''
        EventAction:
          type: string
          format: String
          description: ''
        EventStatus:
          type: string
          format: String
          description: ''
        EventValue:
          type: string
          format: String
          description: ''
        EventValidityPeriod:
          type: string
          format: String
          description: ''
        EventIdentification:
          type: string
          format: String
          description: ''
    Text:
      type: object
      format: Text
      description: " \r\n"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    ClearingandSettlement:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      properties:
        CorrespondentBankClearingArrangementReference:
          $ref: '#/components/schemas/ClearingArrangement'
        CorrespondentBankClearingArrangementClearingInstructions:
          $ref: '#/components/schemas/ClearingInstruction'
        CorrespondentBankClearingArrangementSettlementInstructions:
          $ref: '#/components/schemas/SettlementInstruction'
        MirrorNostroAccountReference:
          $ref: '#/components/schemas/Account'
        ClearingTransaction:
          $ref: '#/components/schemas/ClearingTransaction'
        SettlementTransaction:
          $ref: '#/components/schemas/SettlementTransaction'
    ClearingArrangement:
      type: object
      format: ClearingArrangement
      description: >-
        The clearing arrangement between the bank and clearing house - includes
        schedule, limits ClearingClearing
        (https://www.iso20022.org/standardsrepository/type/Clearing)StandardISO20022
        BM ()
      properties:
        Clearingsystemtypevalues:
          enum:
            - Clearingsystemtypevalues
          format: ClearingArrangement
    ClearingInstruction:
      type: object
      format: ClearingInstruction
      description: "Customer specific default clearing instructions \r\n"
      properties:
        ClearingInstruction:
          type: string
          format: Class
          description: 'A request to do the clearing of transaction.  '
    SettlementInstruction:
      type: object
      format: SettlementInstruction
      description: >-
        Customer specific default settlement instructions (e.g. to handle
        netting arrangements) CashSettlementCashSettlement
        (https://www.iso20022.org/standardsrepository/type/CashSettlement)StandardISO20022
        BM ()
      properties:
        SettlementInstructionIdentifier:
          $ref: '#/components/schemas/Identifier'
        InterbankSettlementAmount:
          $ref: '#/components/schemas/Amount'
        InterbankSettlementCurrency:
          $ref: '#/components/schemas/Currencycode'
        CreditDateTime:
          $ref: '#/components/schemas/Datetime'
        DebitDateTime:
          $ref: '#/components/schemas/Datetime'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: >-
        The name of account


        The account name is the name or names of the account owner(s)
        represented at an account level, as displayed by the ASPSP's online
        channels. Note, the account name is not the product name or the nickname
        of the account. (Open Banking) 
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Account:
      type: object
      format: Account
      description: >-
        Used for central bank clearing reconciliations AccountAccount 
        (https://www.iso20022.org/standardsrepository/type/Account)StandardISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdate'
        AccountType:
          $ref: '#/components/schemas/Accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
        Accountstatus:
          type: string
          format: DataType
          description: 'Specifies the current state of an account. (ISO20022) '
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
        Accountidentification:
          type: string
          format: DataType
          description: ''
    Accountdate:
      type: object
      format: Accountdate
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
          format: Accountdate
        AccountDate:
          $ref: '#/components/schemas/Datetime'
        Accountdate:
          type: string
          format: DataType
          description: ''
    Accounttype:
      type: object
      format: Accounttype
      description: >-
        Specifies the category of account like payment account, loan account,
        cash account, securities account, etc.  
      properties:
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
          format: Accounttype
        AccountTypeName:
          $ref: '#/components/schemas/Name'
        Accounttype:
          type: string
          format: DataType
          description: 'A classification of accounts based on their purpose  '
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - Openingbalance
            - Closingbalance
            - Currentbalance
            - Availablebalance
            - Ledgerbalance
            - Reservebalance
            - Freebalance
            - Principalbalance
          format: Accountbalance
        BalanceDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Accountbalance:
          type: string
          format: DataType
          description: >-
            Numerical representation of the net increases and decreases in an
            account at a specific point in time. (ISO20022)

            https://www.iso20022.org/standardsrepository/type/Balance 
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
        Accountcurrency:
          type: string
          format: DataType
          description: ''
    ClearingTransaction:
      type: object
      format: ClearingTransaction
      description: "A record of a clearing transaction \r\n"
      properties:
        ClearingTransaction:
          type: string
          format: Class
          description: 'Transaction that is the result of fulfilling a clearing arrangement '
    SettlementTransaction:
      type: object
      format: SettlementTransaction
      description: "A record of a settlement transaction \r\n"
      properties:
        SettlementTransaction:
          type: string
          format: Class
          description: >-
            Transaction that is the result of fulfilling a settlement
            arrangement 
    InboundPayments:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/Transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/Transaction'
        PayerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerReference:
          $ref: '#/components/schemas/Involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeReference:
          $ref: '#/components/schemas/Involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeBankReference:
          $ref: '#/components/schemas/Involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/Instruction'
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currencycode'
        Transactiondatetypevalues:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
        Date:
          $ref: '#/components/schemas/Datetime'
        Correspondentbankinvolvementtypevalues:
          enum:
            - AdvisingBank
            - BeneficiaryBank
            - ReimbursingBank
            - RefinancingBank
            - OrderingBank
            - SenderBank
            - PayingBank
            - IntermediaryBank
            - SenderCorrespondent
            - ReceiverCorrespondent
    Transaction:
      type: object
      format: Transaction
      description: "…. \r\n"
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        TransactionDate:
          $ref: '#/components/schemas/Transactiondate'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transaction
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        TransactionStatus:
          $ref: '#/components/schemas/Transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/Name'
    Transactiondate:
      type: object
      format: Transactiondate
      description: >-
        The Date that the transaction has occurred or is planned to occur.

        A characteristic of transaction which refers to the LifecycleDate of
        transaction (e.g., initiated date, executed date, fulfillment date).  
      properties:
        TransactionDate:
          $ref: '#/components/schemas/Datetime'
        Transactiondatetypevalues:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
          format: Transactiondate
    Transactionlifecyclestatus:
      type: object
      format: Transactionlifecyclestatus
      description: >-
        A characteristic of transaction which refers to the LifecycleStatus of
        transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Transactionstatustypevalues:
          enum:
            - Initiated
            - Executed
            - Cancelled
            - Confirmed
            - Suspended
            - Pending
            - Completed
            - Notified
            - Booked
            - Rejected
          format: Transactionlifecyclestatus
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to the payee account as source of funds \r\n"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
          format: ProductAgreement
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/Agreement'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Agreement:
      type: object
      format: Agreement
      description: ' '
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: ' '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Agreementlifecyclestatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    Instruction:
      type: object
      format: Instruction
      description: "Transaction specific clearing and settlement instructions \r\n"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondate:
      type: object
      format: Instructiondate
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Date'
        Instructiondatetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondate
    Instructionlifecyclestatus:
      type: object
      format: Instructionlifecyclestatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionlifecylestatustypevalues:
          enum:
            - Requested
            - Prepared
            - InProgress
            - Fulfilled
            - OnHold
            - Failed
          format: Instructionlifecyclestatus
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    OutboundPayments:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/Transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/Transaction'
        PayerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerReference:
          $ref: '#/components/schemas/Involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeReference:
          $ref: '#/components/schemas/Involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeBankReference:
          $ref: '#/components/schemas/Involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/Instruction'
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currencycode'
        Transactiondatetypevalues:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
        Date:
          $ref: '#/components/schemas/Transactiondate'
        Correspondentbankinvolvementtypevalues:
          enum:
            - AdvisingBank
            - BeneficiaryBank
            - ReimbursingBank
            - RefinancingBank
            - OrderingBank
            - SenderBank
            - PayingBank
            - IntermediaryBank
            - SenderCorrespondent
            - ReceiverCorrespondent
        TransactionStatus:
          type: string
          format: ''
          description: ''
    Reconciliation:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      properties:
        CorrespondentBankReconciliationTaskReference:
          $ref: '#/components/schemas/Task'
        CorrespondentBankReconciliationTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        CorrespondentBankReconciliationTaskResult:
          $ref: '#/components/schemas/Text'
    Task:
      type: object
      format: Task
      description: "Reference to the correspondent reconciliation task \r\n"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Workproduct:
      type: object
      format: Workproduct
      description: "Work documentation, accounts and transaction details produced and referenced during the reconciliation \r\n"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          type: string
          format: String
          description: ''
    CorrespondentBankOperatingSession:
      type: object
      description: >-
        Fulfill any scheduled and ad-hoc obligations under a service
        arrangement, most typically for a financial product or facility within
        Correspondent Bank. 
      properties:
        CorrespondentBankFacilityReference:
          $ref: '#/components/schemas/CorrespondentBankingArrangement'
        CorrespondentBankFacility:
          $ref: '#/components/schemas/CorrespondentBankingArrangement'
        CorrespondentBankServicingSchedule:
          $ref: '#/components/schemas/Schedule'
        HolidayTimezoneSchedule:
          $ref: '#/components/schemas/Calendar'
        VostroAccountReference:
          $ref: '#/components/schemas/Account'
        NostroMirrorAccountReference:
          $ref: '#/components/schemas/Account'
        SessionStatus:
          $ref: '#/components/schemas/Status'
    CorrespondentBankingArrangement:
      type: object
      format: CorrespondentBankingArrangement
      description: "The correspondent bank arrangement (details agreed limits, fees, preferred payments mechanism, etc.) \r\n"
      properties:
        CorrespondentBankingArrangement:
          type: string
          format: Class
          description: ''
    Schedule:
      type: object
      format: Schedule
      description: "Details of the schedule for processing payments, clearing and settlement and reconciliations \r\n"
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    Calendar:
      type: object
      format: Calendar
      description: "A reference to the bank calendar details for payment processing \r\n"
      properties:
        CalendarReference:
          type: string
          format: String
          description: ''
        CalendarType:
          type: string
          format: String
          description: ''
    CorrespondentBankOperatingSessionNotify:
      type: object
      description: ''
      properties:
        CorrespondentBankFacilityReference:
          $ref: '#/components/schemas/CorrespondentBankingArrangement'
        CorrespondentBankFacility:
          $ref: '#/components/schemas/CorrespondentBankingArrangement'
        CorrespondentBankServicingSchedule:
          $ref: '#/components/schemas/Schedule'
        HolidayTimezoneSchedule:
          $ref: '#/components/schemas/Calendar'
        VostroAccountReference:
          $ref: '#/components/schemas/Account'
        NostroMirrorAccountReference:
          $ref: '#/components/schemas/Account'
    InboundPaymentsNotify:
      type: object
      description: ''
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/Transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/Transaction'
        PayerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerReference:
          $ref: '#/components/schemas/Involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeReference:
          $ref: '#/components/schemas/Involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeBankReference:
          $ref: '#/components/schemas/Involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/Instruction'
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currencycode'
        Transactiondatetypevalues:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
        Date:
          $ref: '#/components/schemas/Datetime'
        Correspondentbankinvolvementtypevalues:
          enum:
            - AdvisingBank
            - BeneficiaryBank
            - ReimbursingBank
            - RefinancingBank
            - OrderingBank
            - SenderBank
            - PayingBank
            - IntermediaryBank
            - SenderCorrespondent
            - ReceiverCorrespondent
    OutboundPaymentsNotify:
      type: object
      description: ''
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/Transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/Transaction'
        PayerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerReference:
          $ref: '#/components/schemas/Involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/Involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeReference:
          $ref: '#/components/schemas/Involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        PayeeBankReference:
          $ref: '#/components/schemas/Involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/Instruction'
        Amount:
          $ref: '#/components/schemas/Amount'
        Currency:
          $ref: '#/components/schemas/Currencycode'
        Transactiondatetypevalues:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
        Date:
          $ref: '#/components/schemas/Transactiondate'
        Correspondentbankinvolvementtypevalues:
          enum:
            - AdvisingBank
            - BeneficiaryBank
            - ReimbursingBank
            - RefinancingBank
            - OrderingBank
            - SenderBank
            - PayingBank
            - IntermediaryBank
            - SenderCorrespondent
            - ReceiverCorrespondent
    ReconciliationNotify:
      type: object
      description: ''
      properties:
        CorrespondentBankReconciliationTaskReference:
          $ref: '#/components/schemas/Task'
        CorrespondentBankReconciliationTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        CorrespondentBankReconciliationTaskResult:
          $ref: '#/components/schemas/Text'
