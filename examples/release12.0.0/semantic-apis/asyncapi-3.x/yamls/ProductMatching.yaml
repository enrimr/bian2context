asyncapi: 3.0.0
info:
  title: Product Matching
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Capability used to match
    eligible product and product combinations to a customer based on prevailing
    conditions such as customer type, product interest, solicitation/retention,
    campaign alignment
channels:
  ProductCustomerCombinationAssessment/Created:
    address: ProductCustomerCombinationAssessment/Created
    messages:
      ProductCustomerCombinationAssessment-created.message:
        $ref: '#/components/messages/ProductCustomerCombinationAssessment'
    description: ''
  ProductCustomerCombinationAssessment/Updated:
    address: ProductCustomerCombinationAssessment/Updated
    messages:
      ProductCustomerCombinationAssessment-updated.message:
        $ref: '#/components/messages/ProductCustomerCombinationAssessment'
    description: ''
  ProductTypeSelection/Created:
    address: ProductTypeSelection/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductTypeSelection'
    description: ''
  ProductTypeSelection/Updated:
    address: ProductTypeSelection/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductTypeSelection'
    description: ''
  ContextCriteria/Created:
    address: ContextCriteria/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ContextCriteria'
    description: ''
  ContextCriteria/Updated:
    address: ContextCriteria/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ContextCriteria'
    description: ''
  ProductEligibility/Created:
    address: ProductEligibility/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductEligibility'
    description: ''
  ProductEligibility/Updated:
    address: ProductEligibility/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductEligibility'
    description: ''
  BankandCampaignAlignment/Created:
    address: BankandCampaignAlignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/BankandCampaignAlignment'
    description: ''
  BankandCampaignAlignment/Updated:
    address: BankandCampaignAlignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/BankandCampaignAlignment'
    description: ''
  ProductMatchingOutcome/Created:
    address: ProductMatchingOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductMatchingOutcome'
    description: ''
  ProductMatchingOutcome/Updated:
    address: ProductMatchingOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductMatchingOutcome'
    description: ''
operations:
  ProductCustomerCombinationAssessment-created:
    action: receive
    channel:
      $ref: '#/channels/ProductCustomerCombinationAssessment~1Created'
    summary: ProductCustomerCombinationAssessment
    messages:
      - $ref: >-
          #/channels/ProductCustomerCombinationAssessment~1Created/messages/ProductCustomerCombinationAssessment-created.message
  ProductCustomerCombinationAssessment-updated:
    action: receive
    channel:
      $ref: '#/channels/ProductCustomerCombinationAssessment~1Updated'
    summary: ProductCustomerCombinationAssessment
    messages:
      - $ref: >-
          #/channels/ProductCustomerCombinationAssessment~1Updated/messages/ProductCustomerCombinationAssessment-updated.message
  ProductTypeSelection/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductTypeSelection~1Created'
    summary: ProductTypeSelection
    messages:
      - $ref: '#/channels/ProductTypeSelection~1Created/messages/publish.message'
  ProductTypeSelection/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductTypeSelection~1Updated'
    summary: ProductTypeSelection
    messages:
      - $ref: '#/channels/ProductTypeSelection~1Updated/messages/publish.message'
  ContextCriteria/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ContextCriteria~1Created'
    summary: ContextCriteria
    messages:
      - $ref: '#/channels/ContextCriteria~1Created/messages/publish.message'
  ContextCriteria/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ContextCriteria~1Updated'
    summary: ContextCriteria
    messages:
      - $ref: '#/channels/ContextCriteria~1Updated/messages/publish.message'
  ProductEligibility/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductEligibility~1Created'
    summary: ProductEligibility
    messages:
      - $ref: '#/channels/ProductEligibility~1Created/messages/publish.message'
  ProductEligibility/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductEligibility~1Updated'
    summary: ProductEligibility
    messages:
      - $ref: '#/channels/ProductEligibility~1Updated/messages/publish.message'
  BankandCampaignAlignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/BankandCampaignAlignment~1Created'
    summary: BankandCampaignAlignment
    messages:
      - $ref: '#/channels/BankandCampaignAlignment~1Created/messages/publish.message'
  BankandCampaignAlignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/BankandCampaignAlignment~1Updated'
    summary: BankandCampaignAlignment
    messages:
      - $ref: '#/channels/BankandCampaignAlignment~1Updated/messages/publish.message'
  ProductMatchingOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductMatchingOutcome~1Created'
    summary: ProductMatchingOutcome
    messages:
      - $ref: '#/channels/ProductMatchingOutcome~1Created/messages/publish.message'
  ProductMatchingOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductMatchingOutcome~1Updated'
    summary: ProductMatchingOutcome
    messages:
      - $ref: '#/channels/ProductMatchingOutcome~1Updated/messages/publish.message'
components:
  messages:
    ProductCustomerCombinationAssessment:
      name: ProductCustomerCombinationAssessment
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/ProductCustomerCombinationAssessment'
    ProductTypeSelection:
      name: ProductTypeSelection
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/ProductTypeSelection'
    ContextCriteria:
      name: ContextCriteria
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/ContextCriteria'
    ProductEligibility:
      name: ProductEligibility
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/ProductEligibility'
    BankandCampaignAlignment:
      name: BankandCampaignAlignment
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/BankandCampaignAlignment'
    ProductMatchingOutcome:
      name: ProductMatchingOutcome
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      payload:
        $ref: '#/components/schemas/ProductMatchingOutcome'
  schemas:
    ProductTypeSelection:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        ProductTypeSelectionPreconditions:
          type: string
          format: String
          description: "The required status/situation before the test can be applied \r\n"
        ProductTypeSelectionAnalysisSchedule:
          type: string
          format: String
          description: "The schedule and timing of the testing performed \r\n"
        ProductTypeSelectionVersionNumber:
          type: string
          format: String
          description: "The test version employed \r\n"
        ProductTypeSelection:
          $ref: '#/components/schemas/BusinessService'
        ProductTypeSelectionServiceType:
          type: string
          format: String
          description: "Reference to the specific business service type \r\n"
        ProductTypeSelectionServiceDescription:
          type: string
          format: String
          description: "Description of the performed business service \r\n"
        ProductTypeSelectionServiceInputsandOuputs:
          type: string
          format: String
          description: "Mandatory and optional inputs and output information for the business service \r\n"
        ProductTypeSelectionServiceWorkProduct:
          type: string
          format: String
          description: "Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service \r\n"
        ProductTypeSelectionServiceName:
          type: string
          format: String
          description: ''
    BusinessService:
      type: object
      format: BusinessService
      description: "The Product/Customer Combination Assessment specific  Business Service \r\n"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    ContextCriteria:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        ContextCriteriaPreconditions:
          type: string
          format: String
          description: "The required status/situation before the test can be applied \r\n"
        ContextCriteriaAnalysisSchedule:
          type: string
          format: String
          description: "The schedule and timing of the testing performed \r\n"
        ContextCriteriaVersionNumber:
          type: string
          format: String
          description: "The test version employed \r\n"
        ContextCriteria:
          $ref: '#/components/schemas/BusinessService'
        ContextCriteriaServiceType:
          type: string
          format: String
          description: "Reference to the specific business service type \r\n"
        ContextCriteriaServiceDescription:
          type: string
          format: String
          description: "Description of the performed business service \r\n"
        ContextCriteriaServiceInputsandOuputs:
          type: string
          format: String
          description: "Mandatory and optional inputs and output information for the business service \r\n"
        ContextCriteriaServiceWorkProduct:
          type: string
          format: String
          description: "Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service \r\n"
        ContextCriteriaServiceName:
          type: string
          format: String
          description: ''
    ProductEligibility:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        ProductEligibilityPreconditions:
          type: string
          format: String
          description: "The required status/situation before the test can be applied \r\n"
        ProductEligibilityAnalysisSchedule:
          type: string
          format: String
          description: "The schedule and timing of the testing performed \r\n"
        ProductEligibilityVersionNumber:
          type: string
          format: String
          description: "The test version employed \r\n"
        ProductEligibility:
          $ref: '#/components/schemas/BusinessService'
        ProductEligibilityServiceType:
          type: string
          format: String
          description: "Reference to the specific business service type \r\n"
        ProductEligibilityServiceDescription:
          type: string
          format: String
          description: "Description of the performed business service \r\n"
        ProductEligibilityServiceInputsandOuputs:
          type: string
          format: String
          description: "Mandatory and optional inputs and output information for the business service \r\n"
        ProductEligibilityServiceWorkProduct:
          type: string
          format: String
          description: "Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service \r\n"
        ProductEligibilityServiceName:
          type: string
          format: String
          description: ''
    BankandCampaignAlignment:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        BankandCampaignAlignmentPreconditions:
          type: string
          format: String
          description: "The required status/situation before the test can be applied \r\n"
        BankandCampaignAlignmentAnalysisSchedule:
          type: string
          format: String
          description: "The schedule and timing of the testing performed \r\n"
        BankandCampaignAlignmentVersionNumber:
          type: string
          format: String
          description: "The test version employed \r\n"
        BankandCampaignAlignment:
          $ref: '#/components/schemas/BusinessService'
        BankandCampaignAlignmentServiceType:
          type: string
          format: String
          description: "Reference to the specific business service type \r\n"
        BankandCampaignAlignmentServiceDescription:
          type: string
          format: String
          description: "Description of the performed business service \r\n"
        BankandCampaignAlignmentServiceInputsandOuputs:
          type: string
          format: String
          description: "Mandatory and optional inputs and output information for the business service \r\n"
        BankandCampaignAlignmentServiceWorkProduct:
          type: string
          format: String
          description: "Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service \r\n"
        BankandCampaignAlignmentServiceName:
          type: string
          format: String
          description: ''
    ProductMatchingOutcome:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        ProductMatchingWorkProduct:
          $ref: '#/components/schemas/CustomerProductMatch'
        ProductMatchingAssessmentType:
          type: string
          format: String
          description: ''
    CustomerProductMatch:
      type: object
      format: CustomerProductMatch
      description: " \r\n"
      properties:
        CustomerProductMatch:
          type: string
          format: Class
          description: >-
            A set of preferred product(s) for which a customer is eligible in a
            specific servicing situation.  
    ProductCustomerCombinationAssessment:
      type: object
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement  within Product Matching. 


        Examples:- Perform regulatory tests on a proposed financial transaction
        and check a new offer conforms to an existing contractual agreement.
      properties:
        ProductCustomerCombinationAssessmentParameterType:
          type: string
          format: String
          description: "A Classification value that distinguishes between Assessments according to type of concern defined within Product/Customer Combination Assessment . Eg Market Analysis, Risk Analysis, Perfomance Analysis, etc. \r\n"
        ProductCustomerCombinationAssessmentSelectedOption:
          type: string
          format: String
          description: "A selected optional business service as subject matter of assessment \r\n"
        Productmatchingtypevalues:
          enum:
            - Productmatchingtypevalues
        ProductCustomerCombinationAssessmentReference:
          $ref: '#/components/schemas/ProductMatching'
        ProductCustomerCombinationAssessmentRequest:
          $ref: '#/components/schemas/ProductMatchingInstruction'
        ProductCustomerCombinationAssessmentSchedule:
          $ref: '#/components/schemas/Schedule'
        ProductCustomerCombinationAssessmentStatus:
          $ref: '#/components/schemas/Status'
        ProductCustomerCombinationAssessmentUsageLog:
          $ref: '#/components/schemas/Log'
        ProductCustomerCombinationAssessmentAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        ProductCustomerCombinationAssessmentServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        ProductCustomerCombinationAssessmentRequesterReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerReference:
          $ref: '#/components/schemas/CustomerRelationship'
    ProductMatching:
      type: object
      format: ProductMatching
      description: "Reference to Product/Customer Combination Assessment \r\n"
      properties:
        ProductMatchingContext:
          type: string
          format: String
          description: 'e.g. solicitation, cross/up-sell, retention, relationship review '
        ProductMatchingAuthorizationCode:
          type: string
          format: String
          description: 'A code which is used when the match requires authorization.  '
    ProductMatchingInstruction:
      type: object
      format: ProductMatchingInstruction
      description: "Request to assess Product/CustomerCombination \r\n"
      properties:
        ProductMatchingInstruction:
          type: string
          format: Class
          description: >-
            An instruction to match eligible product and product combinations to
            a customer 
             
    Schedule:
      type: object
      format: Schedule
      description: "Timetable to assess Product/CustomerCombination \r\n"
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    Status:
      type: object
      format: Status
      description: >-
        The status of Product/Customer Combination Assessment Status Status 
        (https://www.iso20022.org/standardsrepository/type/Status)StandardISO20022
        BM ()
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: "Reference to the party who has requested Product/Customer Combination Assessment \r\n"
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Log:
      type: object
      format: Log
      description: "Reference to the log of (usage) ativities/events of Product/Customer Combination Assessment \r\n"
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    CustomerRelationship:
      type: object
      format: CustomerRelationship
      description: " \r\n"
      properties:
        CustomerRelationship:
          type: string
          format: Class
          description: >-
            A specific relationship between a specific Bank ( -  party acting as
            a supplier of banking services) and one or more other involved
            parties acting as (potential) consumers of banking services as
            agreed in one or more banking product or service offerings and/or
            agreements. 
