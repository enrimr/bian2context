asyncapi: 3.0.0
info:
  title: Card eCommerce Gateway
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the processing of e-commerce transactions for authentication,
    authorization and capture of the financial transactions.
channels:
  CardTransaction/Created:
    address: CardTransaction/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CardTransaction'
    description: ''
  CardTransaction/Updated:
    address: CardTransaction/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CardTransaction'
    description: ''
  TransactionBatch/Created:
    address: TransactionBatch/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TransactionBatch'
    description: ''
  TransactionBatch/Updated:
    address: TransactionBatch/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TransactionBatch'
    description: ''
  CardAuthentication/Created:
    address: CardAuthentication/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CardAuthentication'
    description: ''
  CardAuthentication/Updated:
    address: CardAuthentication/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CardAuthentication'
    description: ''
  TransactionAuthorization/Created:
    address: TransactionAuthorization/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TransactionAuthorization'
    description: ''
  TransactionAuthorization/Updated:
    address: TransactionAuthorization/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TransactionAuthorization'
    description: ''
operations:
  CardTransaction/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CardTransaction~1Created'
    summary: CardTransaction
    messages:
      - $ref: '#/channels/CardTransaction~1Created/messages/publish.message'
  CardTransaction/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CardTransaction~1Updated'
    summary: CardTransaction
    messages:
      - $ref: '#/channels/CardTransaction~1Updated/messages/publish.message'
  TransactionBatch/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TransactionBatch~1Created'
    summary: TransactionBatch
    messages:
      - $ref: '#/channels/TransactionBatch~1Created/messages/publish.message'
  TransactionBatch/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TransactionBatch~1Updated'
    summary: TransactionBatch
    messages:
      - $ref: '#/channels/TransactionBatch~1Updated/messages/publish.message'
  CardAuthentication/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CardAuthentication~1Created'
    summary: CardAuthentication
    messages:
      - $ref: '#/channels/CardAuthentication~1Created/messages/publish.message'
  CardAuthentication/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CardAuthentication~1Updated'
    summary: CardAuthentication
    messages:
      - $ref: '#/channels/CardAuthentication~1Updated/messages/publish.message'
  TransactionAuthorization/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TransactionAuthorization~1Created'
    summary: TransactionAuthorization
    messages:
      - $ref: '#/channels/TransactionAuthorization~1Created/messages/publish.message'
  TransactionAuthorization/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TransactionAuthorization~1Updated'
    summary: TransactionAuthorization
    messages:
      - $ref: '#/channels/TransactionAuthorization~1Updated/messages/publish.message'
components:
  messages:
    CardTransaction:
      name: CardTransaction
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      payload:
        $ref: '#/components/schemas/CardTransaction'
    TransactionBatch:
      name: TransactionBatch
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      payload:
        $ref: '#/components/schemas/TransactionBatch'
    CardAuthentication:
      name: CardAuthentication
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      payload:
        $ref: '#/components/schemas/CardAuthentication'
    TransactionAuthorization:
      name: TransactionAuthorization
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      payload:
        $ref: '#/components/schemas/TransactionAuthorization'
  schemas:
    CardTransaction:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/BankingProduct'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        Cardexpirationdate:
          $ref: '#/components/schemas/Date'
        CardCVV:
          type: string
          format: String
          description: "As detailed on the plastic/token ||\r\n|"
        CardIssuingBankReference:
          type: string
          format: Object
          description: "Refers to the card holder's issuing bank ||\r\n|"
        MerchantAcquiringBankReference:
          type: string
          format: Object
          description: "Refers to the merchant's acquiring bank ||\r\n|"
        eCommerceTransactionType:
          $ref: '#/components/schemas/Transactiontype'
        eCommerceTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        eCommerceTransactionAmountType:
          type: string
          format: String
          description: "Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up) ||\r\n|"
        eCommerceTransactionAmount:
          $ref: '#/components/schemas/Amount'
        eCommerceTransactionMerchantReference:
          type: string
          format: Object
          description: "Refers to the merchant initiating the transaction ||\r\n|"
        eCommerceTransactionLocationReference:
          type: string
          format: Object
          description: "Refers to the point of sale location ||\r\n|"
        eCommerceTransactionProductandServiceReference:
          type: string
          format: Object
          description: "Details of the transaction (e.g. purchased service/product, purpose) ||\r\n|"
        eCommerceTransactionDateTime:
          $ref: '#/components/schemas/Date'
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the card product identifier/number Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the range ends. (ISO20022) '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Date:
      type: object
      format: Date
      description: >-
        Significant dates and times associated with the transaction
        ISODate|ISODate
        (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
        BM ()
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Transactiontype:
      type: object
      format: Transactiontype
      description: "The type of transaction (purchase, cash advance, etc.) ||\r\n|"
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/Name'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transactiontype
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Amount:
      type: object
      format: Amount
      description: >-
        The amount corresponding to the type CurrencyAndAmount|CurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    TransactionBatch:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      properties:
        eCommerceBatchTransactionDateTime:
          $ref: '#/components/schemas/Date'
        TransactionMerchantReference:
          type: string
          format: Object
          description: "Refers to the merchant initiating the batch ||\r\n|"
        eCommerceBatchTransactionRecord:
          type: string
          format: String
          description: "Batch record contains multiple Card Transactions ||\r\n|"
    CardAuthentication:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      properties:
        eCommerceTransactionInstanceReference:
          type: string
          format: Object
          description: "Refers to the card transaction that is being authenticated note all fields may not be required ||\r\n|"
        eCommerceTransactionAuthenticationResponse:
          type: string
          format: String
          description: "The result of the card authentication request ||\r\n|"
    TransactionAuthorization:
      type: object
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples: messages, capture, routines
      properties:
        eCommerceTransactionInstanceReference:
          type: string
          format: Object
          description: "Refers to the card transaction that is being authorized note all fields may not be required ||\r\n|"
        eCommerceTransactionAuthorizationResponse:
          type: string
          format: String
          description: "The result of the transaction authorization request ||\r\n|"
