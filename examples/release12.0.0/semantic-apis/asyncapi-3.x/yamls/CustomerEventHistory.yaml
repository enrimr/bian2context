asyncapi: 3.0.0
info:
  title: Customer Event History
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    captures, classifies and stores relationship, servicing and product
    fulfillment related customer events. In addition to servicing and product
    transaction details, the log can capture life/relationship events that are
    revealed during customer exchanges
channels:
  CustomerEventLog/Created:
    address: CustomerEventLog/Created
    messages:
      CustomerEventLog-created.message:
        $ref: '#/components/messages/CustomerEventLog'
    description: ''
  CustomerEventLog/Updated:
    address: CustomerEventLog/Updated
    messages:
      CustomerEventLog-updated.message:
        $ref: '#/components/messages/CustomerEventLog'
    description: ''
  Servicing/Created:
    address: Servicing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Servicing/Updated:
    address: Servicing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Life/Created:
    address: Life/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Life'
    description: ''
  Life/Updated:
    address: Life/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Life'
    description: ''
  Fraud/Created:
    address: Fraud/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Fraud'
    description: ''
  Fraud/Updated:
    address: Fraud/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Fraud'
    description: ''
  ProductProcessing/Created:
    address: ProductProcessing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductProcessing'
    description: ''
  ProductProcessing/Updated:
    address: ProductProcessing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductProcessing'
    description: ''
  Sales/Created:
    address: Sales/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  Sales/Updated:
    address: Sales/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  Relationship/Created:
    address: Relationship/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Relationship'
    description: ''
  Relationship/Updated:
    address: Relationship/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Relationship'
    description: ''
operations:
  CustomerEventLog-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerEventLog~1Created'
    summary: CustomerEventLog
    messages:
      - $ref: >-
          #/channels/CustomerEventLog~1Created/messages/CustomerEventLog-created.message
  CustomerEventLog-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerEventLog~1Updated'
    summary: CustomerEventLog
    messages:
      - $ref: >-
          #/channels/CustomerEventLog~1Updated/messages/CustomerEventLog-updated.message
  Servicing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Created'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Created/messages/publish.message'
  Servicing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Updated'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Updated/messages/publish.message'
  Life/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Life~1Created'
    summary: Life
    messages:
      - $ref: '#/channels/Life~1Created/messages/publish.message'
  Life/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Life~1Updated'
    summary: Life
    messages:
      - $ref: '#/channels/Life~1Updated/messages/publish.message'
  Fraud/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Fraud~1Created'
    summary: Fraud
    messages:
      - $ref: '#/channels/Fraud~1Created/messages/publish.message'
  Fraud/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Fraud~1Updated'
    summary: Fraud
    messages:
      - $ref: '#/channels/Fraud~1Updated/messages/publish.message'
  ProductProcessing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductProcessing~1Created'
    summary: ProductProcessing
    messages:
      - $ref: '#/channels/ProductProcessing~1Created/messages/publish.message'
  ProductProcessing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductProcessing~1Updated'
    summary: ProductProcessing
    messages:
      - $ref: '#/channels/ProductProcessing~1Updated/messages/publish.message'
  Sales/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Created'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Created/messages/publish.message'
  Sales/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Updated'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Updated/messages/publish.message'
  Relationship/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Relationship~1Created'
    summary: Relationship
    messages:
      - $ref: '#/channels/Relationship~1Created/messages/publish.message'
  Relationship/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Relationship~1Updated'
    summary: Relationship
    messages:
      - $ref: '#/channels/Relationship~1Updated/messages/publish.message'
components:
  messages:
    CustomerEventLog:
      name: CustomerEventLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Customer Event History. 
      payload:
        $ref: '#/components/schemas/CustomerEventLog'
    Servicing:
      name: Servicing
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Servicing'
    Life:
      name: Life
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Life'
    Fraud:
      name: Fraud
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Fraud'
    ProductProcessing:
      name: ProductProcessing
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/ProductProcessing'
    Sales:
      name: Sales
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Sales'
    Relationship:
      name: Relationship
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Relationship'
  schemas:
    Servicing:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        CustomerServicingEventType:
          type: string
          format: String
          description: "The type of event (e.g. self-service, assisted) \r\n"
        CustomerContactRecordReference:
          type: string
          format: Object
          description: "Reference to a contact event log \r\n"
        AccessedProductandService:
          type: string
          format: String
          description: "Reference to the types or instances of products/services being serviced if provided \r\n"
        ChannelDeviceType:
          type: string
          format: String
          description: "The channel and device used in the servicing event \r\n"
        ContactPurpose:
          type: string
          format: String
          description: "The given purpose for the customer servicing action \r\n"
        ContactResult:
          type: string
          format: String
          description: "The captured result of the servicing event \r\n"
        EmployeeUnitReference:
          type: string
          format: Object
          description: "Employees involved in recording the event \r\n"
        CustomerServicingEventRecord:
          type: string
          format: String
          description: "The details of the event (in a suitable format) \r\n"
        DateTimeLocation:
          type: string
          format: String
          description: "Date and time and the location the event was captured \r\n"
    Life:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        CustomerLifeEventType:
          type: string
          format: String
          description: "The type of event  (e.g. marriage/divorce, relocation, birth, graduation) \r\n"
        CustomerContactRecordReference:
          type: string
          format: Object
          description: "Reference to a contact event log \r\n"
        EmployeeUnitReference:
          type: string
          format: Object
          description: "Employees involved in capturing the event \r\n"
        CustomerLifeEventRecord:
          type: string
          format: String
          description: "The details of the event (in a suitable format) \r\n"
        DateTimeLocation:
          type: string
          format: String
          description: "Date and time and the location the event was captured \r\n"
    Fraud:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        CustomerFraudCaseEventType:
          type: string
          format: String
          description: "The type of event  (e.g. stolen card, disputed transaction) \r\n"
        CustomerContactRecordReference:
          type: string
          format: Object
          description: "Reference to a contact event log \r\n"
        AccessedProductandService:
          type: string
          format: String
          description: "Reference to the types or instances of products/services being serviced if provided \r\n"
        EmployeeUnitReference:
          type: string
          format: Object
          description: "Employees involved in recording the fraud case \r\n"
        FraudCaseReference:
          type: string
          format: Object
          description: "Reference to the fraud case processing the analysis and response \r\n"
        DateTimeLocation:
          type: string
          format: String
          description: "Date and time and the location the event was captured \r\n"
    ProductProcessing:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        ProductInstanceReference:
          type: string
          format: Object
          description: "Reference to the specific product instance being processed \r\n"
        ProductActionEventType:
          type: string
          format: String
          description: "The type of event (e.g. payment initiation, statement request) \r\n"
        ProductActionEventDescription:
          type: string
          format: String
          description: "Details of the processing activity if available \r\n"
        ProductActionEventResult:
          type: string
          format: String
          description: "Outcome of the processing action if available \r\n"
        EmployeeUnitReference:
          type: string
          format: Object
          description: "Employees involved in recording the event \r\n"
        CustomerProductandServiceEventRecord:
          type: string
          format: String
          description: "The details of the event (in a suitable format) \r\n"
        DateTimeLocation:
          type: string
          format: String
          description: "Date and time and the location the event was captured \r\n"
    Sales:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        CustomerSalesEventType:
          type: string
          format: String
          description: "The type of event (e.g. campaign, unsolicited, solicited, development) \r\n"
        EmployeeUnitReference:
          type: string
          format: Object
          description: "Employees involved in recording the event \r\n"
        ProductandServiceType:
          type: string
          format: String
          description: "The type of product or service being sold \r\n"
        LeadandOpportunityReference:
          type: string
          format: Object
          description: "Reference to the recorded lead/opportunity if sale progresses \r\n"
        CustomerSalesEventRecord:
          type: string
          format: String
          description: "The details of the event (in a suitable format) \r\n"
        CommissionAgreementReference:
          type: string
          format: Object
          description: "Reference to any commission agreement if appropriate \r\n"
        DateTimeLocation:
          type: string
          format: String
          description: "Date and time and the location the event was captured \r\n"
    Relationship:
      type: object
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      properties:
        CustomerRelationshipEventType:
          type: string
          format: String
          description: ''
        EmployeeUnitReference:
          type: string
          format: Object
          description: ''
        CustomerRelationshipEventRecord:
          type: string
          format: String
          description: ''
        CustomerRelationshipEventAction:
          type: string
          format: String
          description: ''
        DateTimeLocation:
          type: string
          format: String
          description: ''
    CustomerEventLog:
      type: object
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Customer Event History. 
      properties:
        CustomerReference:
          type: string
          format: Object
          description: "Reference to the associated customer (can currently be a person or a company) \r\n"
