asyncapi: 3.0.0
info:
  title: Customer Proposition
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    maintains bank and customer defined requirements spanning all products and
    services
channels:
  CustomerPropositionAgreement/Created:
    address: CustomerPropositionAgreement/Created
    messages:
      CustomerPropositionAgreement-created.message:
        $ref: '#/components/messages/CustomerPropositionAgreement'
    description: ''
  CustomerPropositionAgreement/Updated:
    address: CustomerPropositionAgreement/Updated
    messages:
      CustomerPropositionAgreement-updated.message:
        $ref: '#/components/messages/CustomerPropositionAgreement'
    description: ''
  CustomerDefinedProductandServiceTerm/Created:
    address: CustomerDefinedProductandServiceTerm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerDefinedProductandServiceTerm'
    description: ''
  CustomerDefinedProductandServiceTerm/Updated:
    address: CustomerDefinedProductandServiceTerm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerDefinedProductandServiceTerm'
    description: ''
  BankDefinedProductandServiceTerm/Created:
    address: BankDefinedProductandServiceTerm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/BankDefinedProductandServiceTerm'
    description: ''
  BankDefinedProductandServiceTerm/Updated:
    address: BankDefinedProductandServiceTerm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/BankDefinedProductandServiceTerm'
    description: ''
  CustomerPropositionOutcome/Created:
    address: CustomerPropositionOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerPropositionOutcome'
    description: ''
  CustomerPropositionOutcome/Updated:
    address: CustomerPropositionOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerPropositionOutcome'
    description: ''
  CustomerPropositionAgreement/Notify:
    address: CustomerPropositionAgreement/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CustomerPropositionAgreementNotify'
  BankDefinedProductandServiceTerm/Notify:
    address: BankDefinedProductandServiceTerm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/BankDefinedProductandServiceTermNotify'
  CustomerDefinedProductandServiceTerm/Notify:
    address: CustomerDefinedProductandServiceTerm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CustomerDefinedProductandServiceTermNotify'
operations:
  CustomerPropositionAgreement-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerPropositionAgreement~1Created'
    summary: CustomerPropositionAgreement
    messages:
      - $ref: >-
          #/channels/CustomerPropositionAgreement~1Created/messages/CustomerPropositionAgreement-created.message
  CustomerPropositionAgreement-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerPropositionAgreement~1Updated'
    summary: CustomerPropositionAgreement
    messages:
      - $ref: >-
          #/channels/CustomerPropositionAgreement~1Updated/messages/CustomerPropositionAgreement-updated.message
  CustomerDefinedProductandServiceTerm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerDefinedProductandServiceTerm~1Created'
    summary: CustomerDefinedProductandServiceTerm
    messages:
      - $ref: >-
          #/channels/CustomerDefinedProductandServiceTerm~1Created/messages/publish.message
  CustomerDefinedProductandServiceTerm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerDefinedProductandServiceTerm~1Updated'
    summary: CustomerDefinedProductandServiceTerm
    messages:
      - $ref: >-
          #/channels/CustomerDefinedProductandServiceTerm~1Updated/messages/publish.message
  BankDefinedProductandServiceTerm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/BankDefinedProductandServiceTerm~1Created'
    summary: BankDefinedProductandServiceTerm
    messages:
      - $ref: >-
          #/channels/BankDefinedProductandServiceTerm~1Created/messages/publish.message
  BankDefinedProductandServiceTerm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/BankDefinedProductandServiceTerm~1Updated'
    summary: BankDefinedProductandServiceTerm
    messages:
      - $ref: >-
          #/channels/BankDefinedProductandServiceTerm~1Updated/messages/publish.message
  CustomerPropositionOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerPropositionOutcome~1Created'
    summary: CustomerPropositionOutcome
    messages:
      - $ref: >-
          #/channels/CustomerPropositionOutcome~1Created/messages/publish.message
  CustomerPropositionOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerPropositionOutcome~1Updated'
    summary: CustomerPropositionOutcome
    messages:
      - $ref: >-
          #/channels/CustomerPropositionOutcome~1Updated/messages/publish.message
  CustomerPropositionAgreement/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CustomerPropositionAgreement~1Notify'
    messages:
      - $ref: >-
          #/channels/CustomerPropositionAgreement~1Notify/messages/subscribe.message
  BankDefinedProductandServiceTerm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/BankDefinedProductandServiceTerm~1Notify'
    messages:
      - $ref: >-
          #/channels/BankDefinedProductandServiceTerm~1Notify/messages/subscribe.message
  CustomerDefinedProductandServiceTerm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CustomerDefinedProductandServiceTerm~1Notify'
    messages:
      - $ref: >-
          #/channels/CustomerDefinedProductandServiceTerm~1Notify/messages/subscribe.message
components:
  messages:
    CustomerPropositionAgreement:
      name: CustomerPropositionAgreement
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Customer Proposition.

      payload:
        $ref: '#/components/schemas/CustomerPropositionAgreement'
    CustomerDefinedProductandServiceTerm:
      name: CustomerDefinedProductandServiceTerm
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      payload:
        $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'
    BankDefinedProductandServiceTerm:
      name: BankDefinedProductandServiceTerm
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      payload:
        $ref: '#/components/schemas/BankDefinedProductandServiceTerm'
    CustomerPropositionOutcome:
      name: CustomerPropositionOutcome
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      payload:
        $ref: '#/components/schemas/CustomerPropositionOutcome'
    CustomerPropositionAgreementNotify:
      name: CustomerPropositionAgreementNotify
      payload:
        $ref: '#/components/schemas/CustomerPropositionAgreementNotify'
    BankDefinedProductandServiceTermNotify:
      name: BankDefinedProductandServiceTermNotify
      payload:
        $ref: '#/components/schemas/BankDefinedProductandServiceTermNotify'
    CustomerDefinedProductandServiceTermNotify:
      name: CustomerDefinedProductandServiceTermNotify
      payload:
        $ref: '#/components/schemas/CustomerDefinedProductandServiceTermNotify'
  schemas:
    CustomerDefinedProductandServiceTerm:
      type: object
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        CustomerDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/Arrangement'
        CustomerDefinedProductandServiceTermType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep \r\n"
      properties:
        Condition:
          type: string
          format: Class
          description: >-
            Condition is a premise upon which the fulfillment of an agreement
            depends 


            General and special arrangements, provisions, requirements, rules,
            specifications, and standards that form an integral part of an
            agreement or contract.


            Read more:
            http://www.businessdictionary.com/definition/terms-and-conditions.html

             
    Schedule:
      type: object
      format: Schedule
      description: "Any timing/duration considerations applying to the Customer Defined Product and Service Term \r\n"
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    BusinessService:
      type: object
      format: BusinessService
      description: "The Customer Defined Product and Service Term specific Business Service \r\n"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Agreement:
      type: object
      format: Agreement
      description: >-
        Reference to Customer Defined Product and Service Term Agreement_x000D_

        Agreement
        (https://www.iso20022.org/standardsrepository/type/Agreement)StandardISO20022
        BM ()
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Customer Defined Product and Service Term \r\n"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Agreementlifecyclestatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Reference to Customer Defined Product and Service Term
        ObligationObligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)StandardISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementlifecyclestatus:
      type: object
      format: Arrangementlifecyclestatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Arrangementlifecyclestatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementlifecyclestatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    BankDefinedProductandServiceTerm:
      type: object
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        BankDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/Arrangement'
        BankDefinedProductandServiceTermType:
          $ref: '#/components/schemas/Text'
    CustomerPropositionOutcome:
      type: object
      description: >-
        The Customer Defined Product and Service Term reflects the application
        of a specific rule or regulation that is an aspect of the Customer
        Defined Product and Service Term
      properties:
        CustomerPropositionAgreement:
          $ref: '#/components/schemas/Agreement'
        CustomerPropositionWorkProduct:
          $ref: '#/components/schemas/Workproduct'
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
    Workproduct:
      type: object
      format: Workproduct
      description: " \r\n"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          type: string
          format: String
          description: ''
    CustomerPropositionAgreement:
      type: object
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Customer Proposition.

      properties:
        CustomerPropositionAgreementParameterType:
          $ref: '#/components/schemas/Text'
        CustomerPropositionAgreementSelectedOption:
          $ref: '#/components/schemas/Feature'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        CustomerPropositionAgreementDischargeRequest:
          $ref: '#/components/schemas/Instruction'
        CustomerPropositionAgreementDischargeSchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerPropositionAgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        CustomerPropositionAgreementAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CustomerPropositionAgreementCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerPropositionAgreementObligation:
          $ref: '#/components/schemas/Arrangement'
        CustomerPropositionAgreementEntitlement:
          $ref: '#/components/schemas/Arrangement'
        CustomerPropositionAgreementRegulationReference:
          $ref: '#/components/schemas/RuleSet'
        CustomerPropositionAgreementRegulationType:
          $ref: '#/components/schemas/Rulesettype'
        CustomerPropositionAgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        CustomerPropositionAgreementAccountReference:
          $ref: '#/components/schemas/Account'
        CustomerPropositionAgreementSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of  Customer Proposition Agreement \r\n"
        CustomerPropositionAgreementProductReference:
          $ref: '#/components/schemas/BankingProduct'
        CustomerPropositionAgreementCalendarReference:
          $ref: '#/components/schemas/Calendar'
        CustomerPropositionAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/Agreement'
    Feature:
      type: object
      format: Feature
      description: "A selected optional feature in a product, identified by Parameter Type \r\n"
      properties:
        FeatureType:
          $ref: '#/components/schemas/Text'
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Instruction:
      type: object
      format: Instruction
      description: "Request to discharge Customer Proposition Agreement \r\n"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondate:
      type: object
      format: Instructiondate
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Date'
        Instructiondatetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondate
    Instructionlifecyclestatus:
      type: object
      format: Instructionlifecyclestatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionlifecylestatustypevalues:
          enum:
            - Requested
            - Prepared
            - InProgress
            - Fulfilled
            - OnHold
            - Failed
          format: Instructionlifecyclestatus
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Reference to the regulation which is defined in Customer Proposition
        Agreement GovernanceRulesGovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)StandardISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        RuleSetType:
          $ref: '#/components/schemas/Rulesettype'
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Rulesettype:
      type: object
      format: Rulesettype
      description: "A Classification that distinguishes between the regularity domains of Customer Proposition Agreement \r\n"
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/Name'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: Rulesettype
        Rulesettype:
          type: string
          format: DataType
          description: 'Data type specifies the classification of RuleSet '
    Jurisdiction:
      type: object
      format: Jurisdiction
      description: >-
        Reference to the jurisdiction that is assigned to Customer Proposition
        Agreement in case of legal dispute. JurisdictionJurisdiction
        (https://www.iso20022.org/standardsrepository/type/Jurisdiction)StandardISO20022
        BM ()
      properties:
        Jurisdiction:
          type: string
          format: Class
          description: 'Jurisdiction that will be assigned in case of legal dispute. '
    Account:
      type: object
      format: Account
      description: >-
        Reference to the account which is linked to Customer Proposition
        Agreement


        A characteristic of agreement which refers to its involved account to
        specify the account that will be used to register for the transactions
        in position keeping management. AccountAccount 
        (https://www.iso20022.org/standardsrepository/type/Account)StandardISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdate'
        AccountType:
          $ref: '#/components/schemas/Accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
        Accountstatus:
          type: string
          format: DataType
          description: 'Specifies the current state of an account. (ISO20022) '
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
        Accountidentification:
          type: string
          format: DataType
          description: ''
    Accountdate:
      type: object
      format: Accountdate
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
          format: Accountdate
        AccountDate:
          $ref: '#/components/schemas/Datetime'
        Accountdate:
          type: string
          format: DataType
          description: ''
    Accounttype:
      type: object
      format: Accounttype
      description: >-
        Specifies the category of account like payment account, loan account,
        cash account, securities account, etc.  
      properties:
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
          format: Accounttype
        AccountTypeName:
          $ref: '#/components/schemas/Name'
        Accounttype:
          type: string
          format: DataType
          description: 'A classification of accounts based on their purpose  '
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - Openingbalance
            - Closingbalance
            - Currentbalance
            - Availablebalance
            - Ledgerbalance
            - Reservebalance
            - Freebalance
            - Principalbalance
          format: Accountbalance
        BalanceDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Accountbalance:
          type: string
          format: DataType
          description: >-
            Numerical representation of the net increases and decreases in an
            account at a specific point in time. (ISO20022)

            https://www.iso20022.org/standardsrepository/type/Balance 
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
        Accountcurrency:
          type: string
          format: DataType
          description: ''
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the product which is linked to Customer Proposition
        Agreement


        Comment: 

        A characteristic of agreement which refers to its related products that
        are sold by agreement. Product_x000D_

        Product
        (https://www.iso20022.org/standardsrepository/type/Product)StandardISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        Productlifecyclestatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Calendar:
      type: object
      format: Calendar
      description: "The calendar of Customer Proposition Agreement \r\n"
      properties:
        CalendarReference:
          type: string
          format: String
          description: ''
        CalendarType:
          type: string
          format: String
          description: ''
    CustomerPropositionAgreementNotify:
      type: object
      description: ''
      properties:
        CustomerPropositionAgreementParameterType:
          $ref: '#/components/schemas/Text'
        CustomerPropositionAgreementSelectedOption:
          $ref: '#/components/schemas/Feature'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        CustomerPropositionAgreementDischargeRequest:
          $ref: '#/components/schemas/Instruction'
        CustomerPropositionAgreementDischargeSchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerPropositionAgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        CustomerPropositionAgreementAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CustomerPropositionAgreementCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerPropositionAgreementObligation:
          $ref: '#/components/schemas/Arrangement'
        CustomerPropositionAgreementEntitlement:
          $ref: '#/components/schemas/Arrangement'
        CustomerPropositionAgreementRegulationReference:
          $ref: '#/components/schemas/RuleSet'
        CustomerPropositionAgreementRegulationType:
          $ref: '#/components/schemas/Rulesettype'
        CustomerPropositionAgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        CustomerPropositionAgreementAccountReference:
          $ref: '#/components/schemas/Account'
        CustomerPropositionAgreementSubjectMatter:
          type: string
          format: Object
          description: The subject matter of  Customer Proposition Agreement
        CustomerPropositionAgreementProductReference:
          $ref: '#/components/schemas/BankingProduct'
        CustomerPropositionAgreementCalendarReference:
          $ref: '#/components/schemas/Calendar'
        CustomerPropositionAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/Agreement'
    BankDefinedProductandServiceTermNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        BankDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/Arrangement'
        BankDefinedProductandServiceTermType:
          $ref: '#/components/schemas/Text'
    CustomerDefinedProductandServiceTermNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        CustomerDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/Arrangement'
        CustomerDefinedProductandServiceTermType:
          $ref: '#/components/schemas/Text'
