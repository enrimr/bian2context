asyncapi: 3.0.0
info:
  title: Card Clearing
  version: 12.0.3
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the capture and consolidation of card financial transactions
    originating from various sources, such as POS Network, E-Commerce Gateway,
    ATM Network, or Card Case Management. It also handles the clearing of the
    transactions from the Acquirers to the Issuers through the Card Networks
channels:
  CardClearingProcedure/Created:
    address: CardClearingProcedure/Created
    messages:
      CardClearingProcedure-created.message:
        $ref: '#/components/messages/CardClearingProcedure'
    description: ''
  CardClearingProcedure/Updated:
    address: CardClearingProcedure/Updated
    messages:
      CardClearingProcedure-updated.message:
        $ref: '#/components/messages/CardClearingProcedure'
    description: ''
  Reconciliation/Created:
    address: Reconciliation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
  Reconciliation/Updated:
    address: Reconciliation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
  Capture/Created:
    address: Capture/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Capture/Updated:
    address: Capture/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Routing/Created:
    address: Routing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Routing'
    description: ''
  Routing/Updated:
    address: Routing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Routing'
    description: ''
  Matching/Created:
    address: Matching/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Matching'
    description: ''
  Matching/Updated:
    address: Matching/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Matching'
    description: ''
  Fees/Created:
    address: Fees/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Fees'
    description: ''
  Fees/Updated:
    address: Fees/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Fees'
    description: ''
  FXConversion/Created:
    address: FXConversion/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FXConversion'
    description: ''
  FXConversion/Updated:
    address: FXConversion/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FXConversion'
    description: ''
  Addressing/Created:
    address: Addressing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Addressing'
    description: ''
  Addressing/Updated:
    address: Addressing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Addressing'
    description: ''
operations:
  CardClearingProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CardClearingProcedure~1Created'
    summary: CardClearingProcedure
    messages:
      - $ref: >-
          #/channels/CardClearingProcedure~1Created/messages/CardClearingProcedure-created.message
  CardClearingProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CardClearingProcedure~1Updated'
    summary: CardClearingProcedure
    messages:
      - $ref: >-
          #/channels/CardClearingProcedure~1Updated/messages/CardClearingProcedure-updated.message
  Reconciliation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Created'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Created/messages/publish.message'
  Reconciliation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Updated'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Updated/messages/publish.message'
  Capture/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Created'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Created/messages/publish.message'
  Capture/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Updated'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Updated/messages/publish.message'
  Routing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Routing~1Created'
    summary: Routing
    messages:
      - $ref: '#/channels/Routing~1Created/messages/publish.message'
  Routing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Routing~1Updated'
    summary: Routing
    messages:
      - $ref: '#/channels/Routing~1Updated/messages/publish.message'
  Matching/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Matching~1Created'
    summary: Matching
    messages:
      - $ref: '#/channels/Matching~1Created/messages/publish.message'
  Matching/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Matching~1Updated'
    summary: Matching
    messages:
      - $ref: '#/channels/Matching~1Updated/messages/publish.message'
  Fees/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Fees~1Created'
    summary: Fees
    messages:
      - $ref: '#/channels/Fees~1Created/messages/publish.message'
  Fees/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Fees~1Updated'
    summary: Fees
    messages:
      - $ref: '#/channels/Fees~1Updated/messages/publish.message'
  FXConversion/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FXConversion~1Created'
    summary: FXConversion
    messages:
      - $ref: '#/channels/FXConversion~1Created/messages/publish.message'
  FXConversion/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FXConversion~1Updated'
    summary: FXConversion
    messages:
      - $ref: '#/channels/FXConversion~1Updated/messages/publish.message'
  Addressing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Addressing~1Created'
    summary: Addressing
    messages:
      - $ref: '#/channels/Addressing~1Created/messages/publish.message'
  Addressing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Addressing~1Updated'
    summary: Addressing
    messages:
      - $ref: '#/channels/Addressing~1Updated/messages/publish.message'
components:
  messages:
    CardClearingProcedure:
      name: CardClearingProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Card
        Clearing. 
      payload:
        $ref: '#/components/schemas/CardClearingProcedure'
    Reconciliation:
      name: Reconciliation
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Reconciliation'
    Capture:
      name: Capture
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Capture'
    Routing:
      name: Routing
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Routing'
    Matching:
      name: Matching
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Matching'
    Fees:
      name: Fees
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Fees'
    FXConversion:
      name: FXConversion
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/FXConversion'
    Addressing:
      name: Addressing
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Addressing'
  schemas:
    Reconciliation:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        ReconciliationTaskResult:
          type: string
          format: String
          description: "Details of the transaction matching processing \r\n"
    Capture:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        CardTransactionRecordReference:
          type: string
          format: Object
          description: "Reference to the card transaction as recorded by issuer and/or acquirer these can be batched for some clearing processes \r\n"
        CardTransactionProductInstanceReference:
          type: string
          format: Object
          description: "The account number associated with the card transaction \r\n"
        CardTransactionNetworkReference:
          type: string
          format: Object
          description: "Reference to the network the card transaction is handled by \r\n"
        CardTransactionIssuingBankReference:
          type: string
          format: Object
          description: "Refers to the card holder's issuing bank \r\n"
        CardTransactionMerchantAcquiringBankReference:
          type: string
          format: Object
          description: "Refers to the merchant's acquiring bank \r\n"
        CardTransactionType:
          type: string
          format: String
          description: "The type of transaction (purchase, cash advance, etc.) \r\n"
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        CardTransactionAmountType:
          type: string
          format: String
          description: "Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up) \r\n"
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          type: string
          format: Object
          description: "Refers to the merchant initiating settlement \r\n"
        CardTransactionLocationReference:
          type: string
          format: Object
          description: "Refers to the point of sale location \r\n"
        CardTransactionProductandServiceReference:
          type: string
          format: Object
          description: "Details of the transaction (e.g. purchased service/product, purpose) \r\n"
        CardTransactionDateTime:
          $ref: '#/components/schemas/Date'
        CardTransactionFXConversionCharge:
          type: string
          format: String
          description: "The applied currency conversion charge \r\n"
        CardTransactionInterchargeFee:
          type: string
          format: String
          description: "The applied intercharge fee \r\n"
        CardTransactionAuthorizationRecord:
          type: string
          format: String
          description: "Details the reference, amount, timestamp of the transaction authorization) \r\n"
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Amount:
      type: object
      format: Amount
      description: >-
        The amount corresponding to the type CurrencyAndAmountCurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)StandardISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Date:
      type: object
      format: Date
      description: >-
        Significant dates and times associated with the transaction
        ISODateISODate
        (https://www.iso20022.org/standardsrepository/type/ISODate)StandardISO20022
        BM ()
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Routing:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        RoutingTaskResult:
          type: string
          format: String
          description: "Details of the transaction routing processing \r\n"
    Matching:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        MatchingTaskResult:
          type: string
          format: String
          description: "Details of the transaction matching processing \r\n"
    Fees:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        InterchargeFees:
          type: string
          format: String
          description: "Defines intercharge rates and fees to be applied to card transactions \r\n"
        FeeTaskResult:
          type: string
          format: String
          description: "Details of the transaction fee processing \r\n"
    FXConversion:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        FXConversionRatesandFees:
          $ref: '#/components/schemas/Rate'
        FXConversionTaskResult:
          type: string
          format: String
          description: "Details of the transaction FX conversion \r\n"
    Rate:
      type: object
      format: Rate
      description: >-
        The FX rates and fees that are applied to the transactions
        PercentageRatePercentageRate
        (https://www.iso20022.org/standardsrepository/type/PercentageRate)StandardISO20022
        BM ()
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the range ends. (ISO20022) '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Addressing:
      type: object
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      properties:
        AddressingTaskResult:
          type: string
          format: String
          description: "Details of the transaction addressing \r\n"
    CardClearingProcedure:
      type: object
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Card
        Clearing. 
      properties:
        NetworkReference:
          type: string
          format: Object
          description: "Refers to the card network \r\n"
        ParticipantAcquirerBankReference:
          type: string
          format: Object
          description: "Reference to the Acquiring bank for which the Network orchestrates clearing processing \r\n"
        ParticipantAcquirerBankClearingandSettlementTerms:
          type: string
          format: String
          description: "Defines card clearing fees/terms in force referenced by Network \r\n"
        ParticipantIssuerBankReference:
          type: string
          format: Object
          description: "Reference to the Issuing bank for which the Network orchestrates clearing processing \r\n"
        ParticipantIssuerBankClearingandSettlementTerms:
          type: string
          format: String
          description: "Defines card clearing fees/terms in force referenced by Network \r\n"
        CardClearingProcessType:
          type: string
          format: String
          description: "Defines the type of clearing process e.g. capture, batch, chargeback between combinations of N,I&A \r\n"
        CardClearingProcessDateTime:
          $ref: '#/components/schemas/Date'
        CardClearingServiceSchedule:
          type: string
          format: String
          description: "The schedule of activities for card clearing \r\n"
